// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="foo,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=414,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=1611,HLS_SYN_LUT=1639}" *)

module foo (
        s_axi_BUS_A_AWVALID,
        s_axi_BUS_A_AWREADY,
        s_axi_BUS_A_AWADDR,
        s_axi_BUS_A_WVALID,
        s_axi_BUS_A_WREADY,
        s_axi_BUS_A_WDATA,
        s_axi_BUS_A_WSTRB,
        s_axi_BUS_A_ARVALID,
        s_axi_BUS_A_ARREADY,
        s_axi_BUS_A_ARADDR,
        s_axi_BUS_A_RVALID,
        s_axi_BUS_A_RREADY,
        s_axi_BUS_A_RDATA,
        s_axi_BUS_A_RRESP,
        s_axi_BUS_A_BVALID,
        s_axi_BUS_A_BREADY,
        s_axi_BUS_A_BRESP,
        ap_clk,
        ap_rst_n,
        m_axi_memory_inout_AWVALID,
        m_axi_memory_inout_AWREADY,
        m_axi_memory_inout_AWADDR,
        m_axi_memory_inout_AWID,
        m_axi_memory_inout_AWLEN,
        m_axi_memory_inout_AWSIZE,
        m_axi_memory_inout_AWBURST,
        m_axi_memory_inout_AWLOCK,
        m_axi_memory_inout_AWCACHE,
        m_axi_memory_inout_AWPROT,
        m_axi_memory_inout_AWQOS,
        m_axi_memory_inout_AWREGION,
        m_axi_memory_inout_AWUSER,
        m_axi_memory_inout_WVALID,
        m_axi_memory_inout_WREADY,
        m_axi_memory_inout_WDATA,
        m_axi_memory_inout_WSTRB,
        m_axi_memory_inout_WLAST,
        m_axi_memory_inout_WID,
        m_axi_memory_inout_WUSER,
        m_axi_memory_inout_ARVALID,
        m_axi_memory_inout_ARREADY,
        m_axi_memory_inout_ARADDR,
        m_axi_memory_inout_ARID,
        m_axi_memory_inout_ARLEN,
        m_axi_memory_inout_ARSIZE,
        m_axi_memory_inout_ARBURST,
        m_axi_memory_inout_ARLOCK,
        m_axi_memory_inout_ARCACHE,
        m_axi_memory_inout_ARPROT,
        m_axi_memory_inout_ARQOS,
        m_axi_memory_inout_ARREGION,
        m_axi_memory_inout_ARUSER,
        m_axi_memory_inout_RVALID,
        m_axi_memory_inout_RREADY,
        m_axi_memory_inout_RDATA,
        m_axi_memory_inout_RLAST,
        m_axi_memory_inout_RID,
        m_axi_memory_inout_RUSER,
        m_axi_memory_inout_RRESP,
        m_axi_memory_inout_BVALID,
        m_axi_memory_inout_BREADY,
        m_axi_memory_inout_BRESP,
        m_axi_memory_inout_BID,
        m_axi_memory_inout_BUSER,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 23'b1;
parameter    ap_ST_st2_fsm_1 = 23'b10;
parameter    ap_ST_st3_fsm_2 = 23'b100;
parameter    ap_ST_st4_fsm_3 = 23'b1000;
parameter    ap_ST_st5_fsm_4 = 23'b10000;
parameter    ap_ST_st6_fsm_5 = 23'b100000;
parameter    ap_ST_st7_fsm_6 = 23'b1000000;
parameter    ap_ST_st8_fsm_7 = 23'b10000000;
parameter    ap_ST_pp0_stg0_fsm_8 = 23'b100000000;
parameter    ap_ST_st12_fsm_9 = 23'b1000000000;
parameter    ap_ST_st13_fsm_10 = 23'b10000000000;
parameter    ap_ST_st14_fsm_11 = 23'b100000000000;
parameter    ap_ST_st15_fsm_12 = 23'b1000000000000;
parameter    ap_ST_st16_fsm_13 = 23'b10000000000000;
parameter    ap_ST_st17_fsm_14 = 23'b100000000000000;
parameter    ap_ST_pp1_stg0_fsm_15 = 23'b1000000000000000;
parameter    ap_ST_st21_fsm_16 = 23'b10000000000000000;
parameter    ap_ST_st22_fsm_17 = 23'b100000000000000000;
parameter    ap_ST_pp2_stg0_fsm_18 = 23'b1000000000000000000;
parameter    ap_ST_st26_fsm_19 = 23'b10000000000000000000;
parameter    ap_ST_st27_fsm_20 = 23'b100000000000000000000;
parameter    ap_ST_st28_fsm_21 = 23'b1000000000000000000000;
parameter    ap_ST_st29_fsm_22 = 23'b10000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_BUS_A_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_BUS_A_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MEMORY_INOUT_ID_WIDTH = 1;
parameter    C_M_AXI_MEMORY_INOUT_ADDR_WIDTH = 32;
parameter    C_M_AXI_MEMORY_INOUT_DATA_WIDTH = 32;
parameter    C_M_AXI_MEMORY_INOUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MEMORY_INOUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MEMORY_INOUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_MEMORY_INOUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_MEMORY_INOUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MEMORY_INOUT_TARGET_ADDR = 0;
parameter    C_M_AXI_MEMORY_INOUT_USER_VALUE = 0;
parameter    C_M_AXI_MEMORY_INOUT_PROT_VALUE = 0;
parameter    C_M_AXI_MEMORY_INOUT_CACHE_VALUE = 3;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_BUS_A_WSTRB_WIDTH = (C_S_AXI_BUS_A_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_MEMORY_INOUT_WSTRB_WIDTH = (C_M_AXI_MEMORY_INOUT_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_BUS_A_AWVALID;
output   s_axi_BUS_A_AWREADY;
input  [C_S_AXI_BUS_A_ADDR_WIDTH - 1 : 0] s_axi_BUS_A_AWADDR;
input   s_axi_BUS_A_WVALID;
output   s_axi_BUS_A_WREADY;
input  [C_S_AXI_BUS_A_DATA_WIDTH - 1 : 0] s_axi_BUS_A_WDATA;
input  [C_S_AXI_BUS_A_WSTRB_WIDTH - 1 : 0] s_axi_BUS_A_WSTRB;
input   s_axi_BUS_A_ARVALID;
output   s_axi_BUS_A_ARREADY;
input  [C_S_AXI_BUS_A_ADDR_WIDTH - 1 : 0] s_axi_BUS_A_ARADDR;
output   s_axi_BUS_A_RVALID;
input   s_axi_BUS_A_RREADY;
output  [C_S_AXI_BUS_A_DATA_WIDTH - 1 : 0] s_axi_BUS_A_RDATA;
output  [1:0] s_axi_BUS_A_RRESP;
output   s_axi_BUS_A_BVALID;
input   s_axi_BUS_A_BREADY;
output  [1:0] s_axi_BUS_A_BRESP;
input   ap_clk;
input   ap_rst_n;
output   m_axi_memory_inout_AWVALID;
input   m_axi_memory_inout_AWREADY;
output  [C_M_AXI_MEMORY_INOUT_ADDR_WIDTH - 1 : 0] m_axi_memory_inout_AWADDR;
output  [C_M_AXI_MEMORY_INOUT_ID_WIDTH - 1 : 0] m_axi_memory_inout_AWID;
output  [7:0] m_axi_memory_inout_AWLEN;
output  [2:0] m_axi_memory_inout_AWSIZE;
output  [1:0] m_axi_memory_inout_AWBURST;
output  [1:0] m_axi_memory_inout_AWLOCK;
output  [3:0] m_axi_memory_inout_AWCACHE;
output  [2:0] m_axi_memory_inout_AWPROT;
output  [3:0] m_axi_memory_inout_AWQOS;
output  [3:0] m_axi_memory_inout_AWREGION;
output  [C_M_AXI_MEMORY_INOUT_AWUSER_WIDTH - 1 : 0] m_axi_memory_inout_AWUSER;
output   m_axi_memory_inout_WVALID;
input   m_axi_memory_inout_WREADY;
output  [C_M_AXI_MEMORY_INOUT_DATA_WIDTH - 1 : 0] m_axi_memory_inout_WDATA;
output  [C_M_AXI_MEMORY_INOUT_WSTRB_WIDTH - 1 : 0] m_axi_memory_inout_WSTRB;
output   m_axi_memory_inout_WLAST;
output  [C_M_AXI_MEMORY_INOUT_ID_WIDTH - 1 : 0] m_axi_memory_inout_WID;
output  [C_M_AXI_MEMORY_INOUT_WUSER_WIDTH - 1 : 0] m_axi_memory_inout_WUSER;
output   m_axi_memory_inout_ARVALID;
input   m_axi_memory_inout_ARREADY;
output  [C_M_AXI_MEMORY_INOUT_ADDR_WIDTH - 1 : 0] m_axi_memory_inout_ARADDR;
output  [C_M_AXI_MEMORY_INOUT_ID_WIDTH - 1 : 0] m_axi_memory_inout_ARID;
output  [7:0] m_axi_memory_inout_ARLEN;
output  [2:0] m_axi_memory_inout_ARSIZE;
output  [1:0] m_axi_memory_inout_ARBURST;
output  [1:0] m_axi_memory_inout_ARLOCK;
output  [3:0] m_axi_memory_inout_ARCACHE;
output  [2:0] m_axi_memory_inout_ARPROT;
output  [3:0] m_axi_memory_inout_ARQOS;
output  [3:0] m_axi_memory_inout_ARREGION;
output  [C_M_AXI_MEMORY_INOUT_ARUSER_WIDTH - 1 : 0] m_axi_memory_inout_ARUSER;
input   m_axi_memory_inout_RVALID;
output   m_axi_memory_inout_RREADY;
input  [C_M_AXI_MEMORY_INOUT_DATA_WIDTH - 1 : 0] m_axi_memory_inout_RDATA;
input   m_axi_memory_inout_RLAST;
input  [C_M_AXI_MEMORY_INOUT_ID_WIDTH - 1 : 0] m_axi_memory_inout_RID;
input  [C_M_AXI_MEMORY_INOUT_RUSER_WIDTH - 1 : 0] m_axi_memory_inout_RUSER;
input  [1:0] m_axi_memory_inout_RRESP;
input   m_axi_memory_inout_BVALID;
output   m_axi_memory_inout_BREADY;
input  [1:0] m_axi_memory_inout_BRESP;
input  [C_M_AXI_MEMORY_INOUT_ID_WIDTH - 1 : 0] m_axi_memory_inout_BID;
input  [C_M_AXI_MEMORY_INOUT_BUSER_WIDTH - 1 : 0] m_axi_memory_inout_BUSER;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm = 23'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_64;
reg    ap_ready;
wire   [31:0] byte_block_in_offset;
reg   [31:0] byte_block_in_offset_0_data_reg = 32'b00000000000000000000000000000000;
reg    byte_block_in_offset_0_vld_reg = 1'b0;
reg    byte_block_in_offset_0_ack_out;
wire   [31:0] byte_x_in_in_offset;
reg   [31:0] byte_x_in_in_offset_0_data_reg = 32'b00000000000000000000000000000000;
reg    byte_x_in_in_offset_0_vld_reg = 1'b0;
reg    byte_x_in_in_offset_0_ack_out;
wire   [31:0] byte_y_out_out_offset;
reg   [31:0] byte_y_out_out_offset_0_data_reg = 32'b00000000000000000000000000000000;
reg    byte_y_out_out_offset_0_vld_reg = 1'b0;
reg    byte_y_out_out_offset_0_ack_out;
reg   [2:0] block_in_int_address0;
reg    block_in_int_ce0;
reg    block_in_int_we0;
wire   [31:0] block_in_int_d0;
wire   [31:0] block_in_int_q0;
reg   [2:0] x_in_in_int_address0;
reg    x_in_in_int_ce0;
reg    x_in_in_int_we0;
wire   [31:0] x_in_in_int_d0;
wire   [31:0] x_in_in_int_q0;
wire    foo_BUS_A_s_axi_U_ap_dummy_ce;
reg    memory_inout_AWVALID;
wire    memory_inout_AWREADY;
wire   [31:0] memory_inout_AWADDR;
wire   [0:0] memory_inout_AWID;
wire   [31:0] memory_inout_AWLEN;
wire   [2:0] memory_inout_AWSIZE;
wire   [1:0] memory_inout_AWBURST;
wire   [1:0] memory_inout_AWLOCK;
wire   [3:0] memory_inout_AWCACHE;
wire   [2:0] memory_inout_AWPROT;
wire   [3:0] memory_inout_AWQOS;
wire   [3:0] memory_inout_AWREGION;
wire   [0:0] memory_inout_AWUSER;
reg    memory_inout_WVALID;
wire    memory_inout_WREADY;
wire   [31:0] memory_inout_WDATA;
wire   [3:0] memory_inout_WSTRB;
wire    memory_inout_WLAST;
wire   [0:0] memory_inout_WID;
wire   [0:0] memory_inout_WUSER;
reg    memory_inout_ARVALID;
wire    memory_inout_ARREADY;
reg   [31:0] memory_inout_ARADDR;
wire   [0:0] memory_inout_ARID;
wire   [31:0] memory_inout_ARLEN;
wire   [2:0] memory_inout_ARSIZE;
wire   [1:0] memory_inout_ARBURST;
wire   [1:0] memory_inout_ARLOCK;
wire   [3:0] memory_inout_ARCACHE;
wire   [2:0] memory_inout_ARPROT;
wire   [3:0] memory_inout_ARQOS;
wire   [3:0] memory_inout_ARREGION;
wire   [0:0] memory_inout_ARUSER;
wire    memory_inout_RVALID;
reg    memory_inout_RREADY;
wire   [31:0] memory_inout_RDATA;
wire    memory_inout_RLAST;
wire   [0:0] memory_inout_RID;
wire   [0:0] memory_inout_RUSER;
wire   [1:0] memory_inout_RRESP;
wire    memory_inout_BVALID;
reg    memory_inout_BREADY;
wire   [1:0] memory_inout_BRESP;
wire   [0:0] memory_inout_BID;
wire   [0:0] memory_inout_BUSER;
wire    foo_memory_inout_m_axi_U_ap_dummy_ce;
reg   [2:0] indvar_reg_168;
reg   [2:0] ap_reg_ppstg_indvar_reg_168_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_8;
reg    ap_sig_bdd_313;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond_reg_377;
reg    ap_sig_bdd_322;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [2:0] indvar8_reg_180;
reg   [2:0] ap_reg_ppstg_indvar8_reg_180_pp1_it1;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_15;
reg    ap_sig_bdd_338;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg   [0:0] exitcond1_reg_395;
reg    ap_sig_bdd_345;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg   [2:0] indvar1_reg_192;
reg   [31:0] reg_212;
reg   [31:0] byte_y_out_out_offset_read_reg_351;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_367;
reg   [31:0] byte_x_in_in_offset_read_reg_357;
reg   [29:0] tmp_1_cast_reg_366;
wire   [0:0] tmp_fu_218_p3;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_383;
reg    ap_sig_ioackin_memory_inout_ARREADY;
wire   [0:0] exitcond_fu_246_p2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_377_pp0_it1;
wire   [2:0] indvar_next_fu_252_p2;
reg   [2:0] indvar_next_reg_381;
reg    ap_sig_cseq_ST_st12_fsm_9;
reg    ap_sig_bdd_403;
wire   [0:0] tmp_2_fu_263_p3;
wire   [0:0] exitcond1_fu_290_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_395_pp1_it1;
wire   [2:0] indvar_next9_fu_296_p2;
reg   [2:0] indvar_next9_reg_399;
wire   [0:0] tmp_5_fu_307_p3;
reg   [0:0] tmp_5_reg_404;
reg    ap_sig_cseq_ST_st22_fsm_17;
reg    ap_sig_bdd_425;
reg    ap_sig_ioackin_memory_inout_AWREADY;
wire    grp_foo_foo_user_fu_203_ap_done;
wire   [0:0] exitcond2_fu_334_p2;
reg   [0:0] exitcond2_reg_413;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_18;
reg    ap_sig_bdd_446;
reg    ap_reg_ppiten_pp2_it0 = 1'b0;
reg    ap_reg_ppiten_pp2_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond2_reg_413_pp2_it1;
reg    ap_sig_ioackin_memory_inout_WREADY;
reg    ap_reg_ppiten_pp2_it2 = 1'b0;
wire   [2:0] indvar_next1_fu_340_p2;
wire   [31:0] y_out_out_int_q0;
reg   [31:0] y_out_out_int_load_reg_427;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_480;
reg    ap_sig_cseq_ST_st17_fsm_14;
reg    ap_sig_bdd_492;
reg   [2:0] y_out_out_int_address0;
reg    y_out_out_int_ce0;
reg    y_out_out_int_we0;
wire   [31:0] y_out_out_int_d0;
wire    grp_foo_foo_user_fu_203_ap_start;
wire    grp_foo_foo_user_fu_203_ap_idle;
wire    grp_foo_foo_user_fu_203_ap_ready;
wire   [2:0] grp_foo_foo_user_fu_203_block_in_int_address0;
wire    grp_foo_foo_user_fu_203_block_in_int_ce0;
wire   [31:0] grp_foo_foo_user_fu_203_block_in_int_q0;
wire   [2:0] grp_foo_foo_user_fu_203_x_in_in_int_address0;
wire    grp_foo_foo_user_fu_203_x_in_in_int_ce0;
wire   [31:0] grp_foo_foo_user_fu_203_x_in_in_int_q0;
wire   [2:0] grp_foo_foo_user_fu_203_y_out_out_int_address0;
wire    grp_foo_foo_user_fu_203_y_out_out_int_ce0;
wire    grp_foo_foo_user_fu_203_y_out_out_int_we0;
wire   [31:0] grp_foo_foo_user_fu_203_y_out_out_int_d0;
reg   [2:0] indvar_phi_fu_172_p4;
reg   [2:0] indvar8_phi_fu_184_p4;
reg    grp_foo_foo_user_fu_203_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st21_fsm_16;
reg    ap_sig_bdd_546;
wire   [63:0] tmp_3_fu_258_p1;
wire   [63:0] tmp_7_fu_302_p1;
wire   [63:0] tmp_s_fu_346_p1;
wire   [63:0] tmp_1_fu_236_p1;
wire   [63:0] tmp_4_fu_279_p1;
wire   [63:0] tmp_6_fu_323_p1;
reg    ap_reg_ioackin_memory_inout_ARREADY = 1'b0;
reg    ap_reg_ioackin_memory_inout_AWREADY = 1'b0;
reg    ap_reg_ioackin_memory_inout_WREADY = 1'b0;
reg    ap_sig_cseq_ST_st29_fsm_22;
reg    ap_sig_bdd_601;
reg    ap_sig_bdd_606;
wire   [29:0] tmp_5_cast_fu_270_p4;
wire   [29:0] tmp_9_cast_fu_314_p4;
reg   [22:0] ap_NS_fsm;
reg    ap_sig_bdd_775;
reg    ap_sig_bdd_563;
reg    ap_sig_bdd_589;
reg    ap_sig_bdd_561;


foo_block_in_int #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
block_in_int_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( block_in_int_address0 ),
    .ce0( block_in_int_ce0 ),
    .we0( block_in_int_we0 ),
    .d0( block_in_int_d0 ),
    .q0( block_in_int_q0 )
);

foo_block_in_int #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
x_in_in_int_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( x_in_in_int_address0 ),
    .ce0( x_in_in_int_ce0 ),
    .we0( x_in_in_int_we0 ),
    .d0( x_in_in_int_d0 ),
    .q0( x_in_in_int_q0 )
);

foo_BUS_A_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_BUS_A_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_BUS_A_DATA_WIDTH ))
foo_BUS_A_s_axi_U(
    .AWVALID( s_axi_BUS_A_AWVALID ),
    .AWREADY( s_axi_BUS_A_AWREADY ),
    .AWADDR( s_axi_BUS_A_AWADDR ),
    .WVALID( s_axi_BUS_A_WVALID ),
    .WREADY( s_axi_BUS_A_WREADY ),
    .WDATA( s_axi_BUS_A_WDATA ),
    .WSTRB( s_axi_BUS_A_WSTRB ),
    .ARVALID( s_axi_BUS_A_ARVALID ),
    .ARREADY( s_axi_BUS_A_ARREADY ),
    .ARADDR( s_axi_BUS_A_ARADDR ),
    .RVALID( s_axi_BUS_A_RVALID ),
    .RREADY( s_axi_BUS_A_RREADY ),
    .RDATA( s_axi_BUS_A_RDATA ),
    .RRESP( s_axi_BUS_A_RRESP ),
    .BVALID( s_axi_BUS_A_BVALID ),
    .BREADY( s_axi_BUS_A_BREADY ),
    .BRESP( s_axi_BUS_A_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( foo_BUS_A_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .byte_block_in_offset( byte_block_in_offset ),
    .byte_x_in_in_offset( byte_x_in_in_offset ),
    .byte_y_out_out_offset( byte_y_out_out_offset )
);

foo_memory_inout_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MEMORY_INOUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MEMORY_INOUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MEMORY_INOUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MEMORY_INOUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MEMORY_INOUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MEMORY_INOUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MEMORY_INOUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MEMORY_INOUT_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_MEMORY_INOUT_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_MEMORY_INOUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MEMORY_INOUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MEMORY_INOUT_CACHE_VALUE ))
foo_memory_inout_m_axi_U(
    .AWVALID( m_axi_memory_inout_AWVALID ),
    .AWREADY( m_axi_memory_inout_AWREADY ),
    .AWADDR( m_axi_memory_inout_AWADDR ),
    .AWID( m_axi_memory_inout_AWID ),
    .AWLEN( m_axi_memory_inout_AWLEN ),
    .AWSIZE( m_axi_memory_inout_AWSIZE ),
    .AWBURST( m_axi_memory_inout_AWBURST ),
    .AWLOCK( m_axi_memory_inout_AWLOCK ),
    .AWCACHE( m_axi_memory_inout_AWCACHE ),
    .AWPROT( m_axi_memory_inout_AWPROT ),
    .AWQOS( m_axi_memory_inout_AWQOS ),
    .AWREGION( m_axi_memory_inout_AWREGION ),
    .AWUSER( m_axi_memory_inout_AWUSER ),
    .WVALID( m_axi_memory_inout_WVALID ),
    .WREADY( m_axi_memory_inout_WREADY ),
    .WDATA( m_axi_memory_inout_WDATA ),
    .WSTRB( m_axi_memory_inout_WSTRB ),
    .WLAST( m_axi_memory_inout_WLAST ),
    .WID( m_axi_memory_inout_WID ),
    .WUSER( m_axi_memory_inout_WUSER ),
    .ARVALID( m_axi_memory_inout_ARVALID ),
    .ARREADY( m_axi_memory_inout_ARREADY ),
    .ARADDR( m_axi_memory_inout_ARADDR ),
    .ARID( m_axi_memory_inout_ARID ),
    .ARLEN( m_axi_memory_inout_ARLEN ),
    .ARSIZE( m_axi_memory_inout_ARSIZE ),
    .ARBURST( m_axi_memory_inout_ARBURST ),
    .ARLOCK( m_axi_memory_inout_ARLOCK ),
    .ARCACHE( m_axi_memory_inout_ARCACHE ),
    .ARPROT( m_axi_memory_inout_ARPROT ),
    .ARQOS( m_axi_memory_inout_ARQOS ),
    .ARREGION( m_axi_memory_inout_ARREGION ),
    .ARUSER( m_axi_memory_inout_ARUSER ),
    .RVALID( m_axi_memory_inout_RVALID ),
    .RREADY( m_axi_memory_inout_RREADY ),
    .RDATA( m_axi_memory_inout_RDATA ),
    .RLAST( m_axi_memory_inout_RLAST ),
    .RID( m_axi_memory_inout_RID ),
    .RUSER( m_axi_memory_inout_RUSER ),
    .RRESP( m_axi_memory_inout_RRESP ),
    .BVALID( m_axi_memory_inout_BVALID ),
    .BREADY( m_axi_memory_inout_BREADY ),
    .BRESP( m_axi_memory_inout_BRESP ),
    .BID( m_axi_memory_inout_BID ),
    .BUSER( m_axi_memory_inout_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( foo_memory_inout_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( memory_inout_ARVALID ),
    .I_ARREADY( memory_inout_ARREADY ),
    .I_ARADDR( memory_inout_ARADDR ),
    .I_ARID( memory_inout_ARID ),
    .I_ARLEN( memory_inout_ARLEN ),
    .I_ARSIZE( memory_inout_ARSIZE ),
    .I_ARLOCK( memory_inout_ARLOCK ),
    .I_ARCACHE( memory_inout_ARCACHE ),
    .I_ARQOS( memory_inout_ARQOS ),
    .I_ARPROT( memory_inout_ARPROT ),
    .I_ARUSER( memory_inout_ARUSER ),
    .I_ARBURST( memory_inout_ARBURST ),
    .I_ARREGION( memory_inout_ARREGION ),
    .I_RVALID( memory_inout_RVALID ),
    .I_RREADY( memory_inout_RREADY ),
    .I_RDATA( memory_inout_RDATA ),
    .I_RID( memory_inout_RID ),
    .I_RUSER( memory_inout_RUSER ),
    .I_RRESP( memory_inout_RRESP ),
    .I_RLAST( memory_inout_RLAST ),
    .I_AWVALID( memory_inout_AWVALID ),
    .I_AWREADY( memory_inout_AWREADY ),
    .I_AWADDR( memory_inout_AWADDR ),
    .I_AWID( memory_inout_AWID ),
    .I_AWLEN( memory_inout_AWLEN ),
    .I_AWSIZE( memory_inout_AWSIZE ),
    .I_AWLOCK( memory_inout_AWLOCK ),
    .I_AWCACHE( memory_inout_AWCACHE ),
    .I_AWQOS( memory_inout_AWQOS ),
    .I_AWPROT( memory_inout_AWPROT ),
    .I_AWUSER( memory_inout_AWUSER ),
    .I_AWBURST( memory_inout_AWBURST ),
    .I_AWREGION( memory_inout_AWREGION ),
    .I_WVALID( memory_inout_WVALID ),
    .I_WREADY( memory_inout_WREADY ),
    .I_WDATA( memory_inout_WDATA ),
    .I_WID( memory_inout_WID ),
    .I_WUSER( memory_inout_WUSER ),
    .I_WLAST( memory_inout_WLAST ),
    .I_WSTRB( memory_inout_WSTRB ),
    .I_BVALID( memory_inout_BVALID ),
    .I_BREADY( memory_inout_BREADY ),
    .I_BRESP( memory_inout_BRESP ),
    .I_BID( memory_inout_BID ),
    .I_BUSER( memory_inout_BUSER )
);

foo_y_out_out_int #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
y_out_out_int_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( y_out_out_int_address0 ),
    .ce0( y_out_out_int_ce0 ),
    .we0( y_out_out_int_we0 ),
    .d0( y_out_out_int_d0 ),
    .q0( y_out_out_int_q0 )
);

foo_foo_user grp_foo_foo_user_fu_203(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_foo_foo_user_fu_203_ap_start ),
    .ap_done( grp_foo_foo_user_fu_203_ap_done ),
    .ap_idle( grp_foo_foo_user_fu_203_ap_idle ),
    .ap_ready( grp_foo_foo_user_fu_203_ap_ready ),
    .block_in_int_address0( grp_foo_foo_user_fu_203_block_in_int_address0 ),
    .block_in_int_ce0( grp_foo_foo_user_fu_203_block_in_int_ce0 ),
    .block_in_int_q0( grp_foo_foo_user_fu_203_block_in_int_q0 ),
    .x_in_in_int_address0( grp_foo_foo_user_fu_203_x_in_in_int_address0 ),
    .x_in_in_int_ce0( grp_foo_foo_user_fu_203_x_in_in_int_ce0 ),
    .x_in_in_int_q0( grp_foo_foo_user_fu_203_x_in_in_int_q0 ),
    .y_out_out_int_address0( grp_foo_foo_user_fu_203_y_out_out_int_address0 ),
    .y_out_out_int_ce0( grp_foo_foo_user_fu_203_y_out_out_int_ce0 ),
    .y_out_out_int_we0( grp_foo_foo_user_fu_203_y_out_out_int_we0 ),
    .y_out_out_int_d0( grp_foo_foo_user_fu_203_y_out_out_int_d0 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_memory_inout_ARREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_memory_inout_ARREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_memory_inout_ARREADY <= ap_const_logic_0;
    end else begin
        if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == ap_sig_ioackin_memory_inout_ARREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_9) & (ap_const_lv1_0 == tmp_2_fu_263_p3) & ~((ap_const_logic_0 == ap_sig_ioackin_memory_inout_ARREADY) & (ap_const_lv1_0 == tmp_2_fu_263_p3))))) begin
            ap_reg_ioackin_memory_inout_ARREADY <= ap_const_logic_0;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_logic_1 == memory_inout_ARREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_9) & (ap_const_lv1_0 == tmp_2_fu_263_p3) & (ap_const_logic_1 == memory_inout_ARREADY)))) begin
            ap_reg_ioackin_memory_inout_ARREADY <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ioackin_memory_inout_AWREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_memory_inout_AWREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_memory_inout_AWREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_563) begin
            if (~(((ap_const_lv1_0 == tmp_5_fu_307_p3) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_AWREADY)) | (ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done))) begin
                ap_reg_ioackin_memory_inout_AWREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_775) begin
                ap_reg_ioackin_memory_inout_AWREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_memory_inout_WREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_memory_inout_WREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_memory_inout_WREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_589) begin
            if (~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2))) begin
                ap_reg_ioackin_memory_inout_WREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == memory_inout_WREADY)) begin
                ap_reg_ioackin_memory_inout_WREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_8) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond_fu_246_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_8) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond_fu_246_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_8) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond_fu_246_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_15) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_290_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_14)) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_15) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond1_fu_290_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_14) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_15) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_290_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_14)) begin
            ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_18) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_lv1_0 == exitcond2_fu_334_p2))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17) & (ap_const_lv1_0 == tmp_5_fu_307_p3) & ~(((ap_const_lv1_0 == tmp_5_fu_307_p3) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_AWREADY)) | (ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done)))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp2_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_18) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & (ap_const_lv1_0 == exitcond2_fu_334_p2))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17) & (ap_const_lv1_0 == tmp_5_fu_307_p3) & ~(((ap_const_lv1_0 == tmp_5_fu_307_p3) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_AWREADY)) | (ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_18) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_lv1_0 == exitcond2_fu_334_p2)))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2))) begin
            ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17) & (ap_const_lv1_0 == tmp_5_fu_307_p3) & ~(((ap_const_lv1_0 == tmp_5_fu_307_p3) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_AWREADY)) | (ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done)))) begin
            ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
        end
    end
end

/// byte_block_in_offset_0_data_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_byte_block_in_offset_0_data_reg
    if (ap_rst_n_inv == 1'b1) begin
        byte_block_in_offset_0_data_reg <= ap_const_lv32_0;
    end else begin
        if (((~(~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_0 == byte_block_in_offset_0_vld_reg)) | (~(~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == byte_block_in_offset_0_vld_reg) & (ap_const_logic_1 == byte_block_in_offset_0_ack_out)))) begin
            byte_block_in_offset_0_data_reg <= byte_block_in_offset;
        end
    end
end

/// byte_x_in_in_offset_0_data_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_byte_x_in_in_offset_0_data_reg
    if (ap_rst_n_inv == 1'b1) begin
        byte_x_in_in_offset_0_data_reg <= ap_const_lv32_0;
    end else begin
        if (((~(~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_0 == byte_x_in_in_offset_0_vld_reg)) | (~(~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == byte_x_in_in_offset_0_vld_reg) & (ap_const_logic_1 == byte_x_in_in_offset_0_ack_out)))) begin
            byte_x_in_in_offset_0_data_reg <= byte_x_in_in_offset;
        end
    end
end

/// byte_y_out_out_offset_0_data_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_byte_y_out_out_offset_0_data_reg
    if (ap_rst_n_inv == 1'b1) begin
        byte_y_out_out_offset_0_data_reg <= ap_const_lv32_0;
    end else begin
        if (((~(~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_0 == byte_y_out_out_offset_0_vld_reg)) | (~(~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) & (ap_const_logic_1 == ap_const_logic_1) & (ap_const_logic_1 == byte_y_out_out_offset_0_vld_reg) & (ap_const_logic_1 == byte_y_out_out_offset_0_ack_out)))) begin
            byte_y_out_out_offset_0_data_reg <= byte_y_out_out_offset;
        end
    end
end

/// grp_foo_foo_user_fu_203_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_foo_foo_user_fu_203_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_foo_foo_user_fu_203_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_16)) begin
            grp_foo_foo_user_fu_203_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_foo_foo_user_fu_203_ap_ready)) begin
            grp_foo_foo_user_fu_203_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_18) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & (ap_const_lv1_0 == exitcond2_fu_334_p2))) begin
        indvar1_reg_192 <= indvar_next1_fu_340_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17) & (ap_const_lv1_0 == tmp_5_fu_307_p3) & ~(((ap_const_lv1_0 == tmp_5_fu_307_p3) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_AWREADY)) | (ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done)))) begin
        indvar1_reg_192 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_15) & (ap_const_lv1_0 == exitcond1_reg_395) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar8_reg_180 <= indvar_next9_reg_399;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_14)) begin
        indvar8_reg_180 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_8) & (exitcond_reg_377 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_reg_168 <= indvar_next_reg_381;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        indvar_reg_168 <= ap_const_lv3_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_15) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_395_pp1_it1 <= exitcond1_reg_395;
        ap_reg_ppstg_indvar8_reg_180_pp1_it1 <= indvar8_reg_180;
        exitcond1_reg_395 <= exitcond1_fu_290_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_18) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)))) begin
        ap_reg_ppstg_exitcond2_reg_413_pp2_it1 <= exitcond2_reg_413;
        exitcond2_reg_413 <= exitcond2_fu_334_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_8) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond_reg_377_pp0_it1 <= exitcond_reg_377;
        ap_reg_ppstg_indvar_reg_168_pp0_it1 <= indvar_reg_168;
        exitcond_reg_377 <= exitcond_fu_246_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        byte_x_in_in_offset_read_reg_357 <= byte_x_in_in_offset_0_data_reg;
        byte_y_out_out_offset_read_reg_351 <= byte_y_out_out_offset_0_data_reg;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_15) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar_next9_reg_399 <= indvar_next9_fu_296_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_8) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_next_reg_381 <= indvar_next_fu_252_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_8) & (exitcond_reg_377 == ap_const_lv1_0) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_15) & (ap_const_lv1_0 == exitcond1_reg_395) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        reg_212 <= memory_inout_RDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == tmp_fu_218_p3))) begin
        tmp_1_cast_reg_366 <= {{byte_block_in_offset_0_data_reg[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17) & ~(((ap_const_lv1_0 == tmp_5_fu_307_p3) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_AWREADY)) | (ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done)))) begin
        tmp_5_reg_404 <= byte_y_out_out_offset_read_reg_351[ap_const_lv32_1F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_18) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & (ap_const_lv1_0 == exitcond2_reg_413))) begin
        y_out_out_int_load_reg_427 <= y_out_out_int_q0;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_22 or ap_sig_bdd_606)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_22) & ~ap_sig_bdd_606)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_22 or ap_sig_bdd_606)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_22) & ~ap_sig_bdd_606)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_8 assign process. ///
always @ (ap_sig_bdd_313)
begin
    if (ap_sig_bdd_313) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_15 assign process. ///
always @ (ap_sig_bdd_338)
begin
    if (ap_sig_bdd_338) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp2_stg0_fsm_18 assign process. ///
always @ (ap_sig_bdd_446)
begin
    if (ap_sig_bdd_446) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_9 assign process. ///
always @ (ap_sig_bdd_403)
begin
    if (ap_sig_bdd_403) begin
        ap_sig_cseq_ST_st12_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_14 assign process. ///
always @ (ap_sig_bdd_492)
begin
    if (ap_sig_bdd_492) begin
        ap_sig_cseq_ST_st17_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_64)
begin
    if (ap_sig_bdd_64) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_16 assign process. ///
always @ (ap_sig_bdd_546)
begin
    if (ap_sig_bdd_546) begin
        ap_sig_cseq_ST_st21_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_17 assign process. ///
always @ (ap_sig_bdd_425)
begin
    if (ap_sig_bdd_425) begin
        ap_sig_cseq_ST_st22_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_22 assign process. ///
always @ (ap_sig_bdd_601)
begin
    if (ap_sig_bdd_601) begin
        ap_sig_cseq_ST_st29_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_367)
begin
    if (ap_sig_bdd_367) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_383)
begin
    if (ap_sig_bdd_383) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_480)
begin
    if (ap_sig_bdd_480) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_memory_inout_ARREADY assign process. ///
always @ (memory_inout_ARREADY or ap_reg_ioackin_memory_inout_ARREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_memory_inout_ARREADY)) begin
        ap_sig_ioackin_memory_inout_ARREADY = memory_inout_ARREADY;
    end else begin
        ap_sig_ioackin_memory_inout_ARREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_memory_inout_AWREADY assign process. ///
always @ (memory_inout_AWREADY or ap_reg_ioackin_memory_inout_AWREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_memory_inout_AWREADY)) begin
        ap_sig_ioackin_memory_inout_AWREADY = memory_inout_AWREADY;
    end else begin
        ap_sig_ioackin_memory_inout_AWREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_memory_inout_WREADY assign process. ///
always @ (memory_inout_WREADY or ap_reg_ioackin_memory_inout_WREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_memory_inout_WREADY)) begin
        ap_sig_ioackin_memory_inout_WREADY = memory_inout_WREADY;
    end else begin
        ap_sig_ioackin_memory_inout_WREADY = ap_const_logic_1;
    end
end

/// block_in_int_address0 assign process. ///
always @ (ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st22_fsm_17 or grp_foo_foo_user_fu_203_block_in_int_address0 or tmp_3_fu_258_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        block_in_int_address0 = tmp_3_fu_258_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17)) begin
        block_in_int_address0 = grp_foo_foo_user_fu_203_block_in_int_address0;
    end else begin
        block_in_int_address0 = 'bx;
    end
end

/// block_in_int_ce0 assign process. ///
always @ (ap_sig_bdd_322 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st22_fsm_17 or grp_foo_foo_user_fu_203_block_in_int_ce0)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        block_in_int_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17)) begin
        block_in_int_ce0 = grp_foo_foo_user_fu_203_block_in_int_ce0;
    end else begin
        block_in_int_ce0 = ap_const_logic_0;
    end
end

/// block_in_int_we0 assign process. ///
always @ (ap_sig_bdd_322 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_reg_377_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_377_pp0_it1))) begin
        block_in_int_we0 = ap_const_logic_1;
    end else begin
        block_in_int_we0 = ap_const_logic_0;
    end
end

/// byte_block_in_offset_0_ack_out assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_22 or ap_sig_bdd_606)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_22) & ~ap_sig_bdd_606)) begin
        byte_block_in_offset_0_ack_out = ap_const_logic_1;
    end else begin
        byte_block_in_offset_0_ack_out = ap_const_logic_0;
    end
end

/// byte_x_in_in_offset_0_ack_out assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_22 or ap_sig_bdd_606)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_22) & ~ap_sig_bdd_606)) begin
        byte_x_in_in_offset_0_ack_out = ap_const_logic_1;
    end else begin
        byte_x_in_in_offset_0_ack_out = ap_const_logic_0;
    end
end

/// byte_y_out_out_offset_0_ack_out assign process. ///
always @ (ap_sig_cseq_ST_st29_fsm_22 or ap_sig_bdd_606)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_22) & ~ap_sig_bdd_606)) begin
        byte_y_out_out_offset_0_ack_out = ap_const_logic_1;
    end else begin
        byte_y_out_out_offset_0_ack_out = ap_const_logic_0;
    end
end

/// indvar8_phi_fu_184_p4 assign process. ///
always @ (indvar8_reg_180 or ap_sig_cseq_ST_pp1_stg0_fsm_15 or exitcond1_reg_395 or ap_reg_ppiten_pp1_it1 or indvar_next9_reg_399)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_15) & (ap_const_lv1_0 == exitcond1_reg_395) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        indvar8_phi_fu_184_p4 = indvar_next9_reg_399;
    end else begin
        indvar8_phi_fu_184_p4 = indvar8_reg_180;
    end
end

/// indvar_phi_fu_172_p4 assign process. ///
always @ (indvar_reg_168 or ap_sig_cseq_ST_pp0_stg0_fsm_8 or exitcond_reg_377 or ap_reg_ppiten_pp0_it1 or indvar_next_reg_381)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_8) & (exitcond_reg_377 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        indvar_phi_fu_172_p4 = indvar_next_reg_381;
    end else begin
        indvar_phi_fu_172_p4 = indvar_reg_168;
    end
end

/// memory_inout_ARADDR assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_1_fu_236_p1 or tmp_4_fu_279_p1 or ap_reg_ioackin_memory_inout_ARREADY or ap_sig_bdd_561)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_memory_inout_ARREADY)) begin
        if (ap_sig_bdd_561) begin
            memory_inout_ARADDR = tmp_4_fu_279_p1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
            memory_inout_ARADDR = tmp_1_fu_236_p1;
        end else begin
            memory_inout_ARADDR = 'bx;
        end
    end else begin
        memory_inout_ARADDR = 'bx;
    end
end

/// memory_inout_ARVALID assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st12_fsm_9 or tmp_2_fu_263_p3 or ap_reg_ioackin_memory_inout_ARREADY)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_logic_0 == ap_reg_ioackin_memory_inout_ARREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_9) & (ap_const_lv1_0 == tmp_2_fu_263_p3) & (ap_const_logic_0 == ap_reg_ioackin_memory_inout_ARREADY)))) begin
        memory_inout_ARVALID = ap_const_logic_1;
    end else begin
        memory_inout_ARVALID = ap_const_logic_0;
    end
end

/// memory_inout_AWVALID assign process. ///
always @ (tmp_5_fu_307_p3 or ap_sig_cseq_ST_st22_fsm_17 or grp_foo_foo_user_fu_203_ap_done or ap_reg_ioackin_memory_inout_AWREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17) & (ap_const_lv1_0 == tmp_5_fu_307_p3) & ~(ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done) & (ap_const_logic_0 == ap_reg_ioackin_memory_inout_AWREADY))) begin
        memory_inout_AWVALID = ap_const_logic_1;
    end else begin
        memory_inout_AWVALID = ap_const_logic_0;
    end
end

/// memory_inout_BREADY assign process. ///
always @ (tmp_5_reg_404 or ap_sig_cseq_ST_st29_fsm_22 or ap_sig_bdd_606)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_22) & (ap_const_lv1_0 == tmp_5_reg_404) & ~ap_sig_bdd_606)) begin
        memory_inout_BREADY = ap_const_logic_1;
    end else begin
        memory_inout_BREADY = ap_const_logic_0;
    end
end

/// memory_inout_RREADY assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_8 or exitcond_reg_377 or ap_sig_bdd_322 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp1_stg0_fsm_15 or exitcond1_reg_395 or ap_sig_bdd_345 or ap_reg_ppiten_pp1_it1)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_8) & (exitcond_reg_377 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_15) & (ap_const_lv1_0 == exitcond1_reg_395) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        memory_inout_RREADY = ap_const_logic_1;
    end else begin
        memory_inout_RREADY = ap_const_logic_0;
    end
end

/// memory_inout_WVALID assign process. ///
always @ (ap_reg_ppstg_exitcond2_reg_413_pp2_it1 or ap_reg_ppiten_pp2_it2 or ap_reg_ioackin_memory_inout_WREADY)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & (ap_const_logic_0 == ap_reg_ioackin_memory_inout_WREADY))) begin
        memory_inout_WVALID = ap_const_logic_1;
    end else begin
        memory_inout_WVALID = ap_const_logic_0;
    end
end

/// x_in_in_int_address0 assign process. ///
always @ (ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_st22_fsm_17 or grp_foo_foo_user_fu_203_x_in_in_int_address0 or tmp_7_fu_302_p1)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) begin
        x_in_in_int_address0 = tmp_7_fu_302_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17)) begin
        x_in_in_int_address0 = grp_foo_foo_user_fu_203_x_in_in_int_address0;
    end else begin
        x_in_in_int_address0 = 'bx;
    end
end

/// x_in_in_int_ce0 assign process. ///
always @ (ap_sig_bdd_345 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_st22_fsm_17 or grp_foo_foo_user_fu_203_x_in_in_int_ce0)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        x_in_in_int_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17)) begin
        x_in_in_int_ce0 = grp_foo_foo_user_fu_203_x_in_in_int_ce0;
    end else begin
        x_in_in_int_ce0 = ap_const_logic_0;
    end
end

/// x_in_in_int_we0 assign process. ///
always @ (ap_sig_bdd_345 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_reg_ppstg_exitcond1_reg_395_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_395_pp1_it1))) begin
        x_in_in_int_we0 = ap_const_logic_1;
    end else begin
        x_in_in_int_we0 = ap_const_logic_0;
    end
end

/// y_out_out_int_address0 assign process. ///
always @ (ap_sig_cseq_ST_st22_fsm_17 or ap_sig_cseq_ST_pp2_stg0_fsm_18 or ap_reg_ppiten_pp2_it0 or grp_foo_foo_user_fu_203_y_out_out_int_address0 or tmp_s_fu_346_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_18) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        y_out_out_int_address0 = tmp_s_fu_346_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17)) begin
        y_out_out_int_address0 = grp_foo_foo_user_fu_203_y_out_out_int_address0;
    end else begin
        y_out_out_int_address0 = 'bx;
    end
end

/// y_out_out_int_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st22_fsm_17 or ap_sig_cseq_ST_pp2_stg0_fsm_18 or ap_reg_ppiten_pp2_it0 or ap_reg_ppstg_exitcond2_reg_413_pp2_it1 or ap_sig_ioackin_memory_inout_WREADY or ap_reg_ppiten_pp2_it2 or grp_foo_foo_user_fu_203_y_out_out_int_ce0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_18) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)))) begin
        y_out_out_int_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17)) begin
        y_out_out_int_ce0 = grp_foo_foo_user_fu_203_y_out_out_int_ce0;
    end else begin
        y_out_out_int_ce0 = ap_const_logic_0;
    end
end

/// y_out_out_int_we0 assign process. ///
always @ (ap_sig_cseq_ST_st22_fsm_17 or grp_foo_foo_user_fu_203_y_out_out_int_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17)) begin
        y_out_out_int_we0 = grp_foo_foo_user_fu_203_y_out_out_int_we0;
    end else begin
        y_out_out_int_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_322 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_345 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or tmp_fu_218_p3 or ap_sig_ioackin_memory_inout_ARREADY or exitcond_fu_246_p2 or tmp_2_fu_263_p3 or exitcond1_fu_290_p2 or tmp_5_fu_307_p3 or ap_sig_ioackin_memory_inout_AWREADY or grp_foo_foo_user_fu_203_ap_done or exitcond2_fu_334_p2 or ap_reg_ppiten_pp2_it0 or ap_reg_ppiten_pp2_it1 or ap_reg_ppstg_exitcond2_reg_413_pp2_it1 or ap_sig_ioackin_memory_inout_WREADY or ap_reg_ppiten_pp2_it2 or ap_sig_bdd_606)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == tmp_fu_218_p3)) begin
                ap_NS_fsm = ap_ST_st12_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_memory_inout_ARREADY)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_8;
        end
        ap_ST_pp0_stg0_fsm_8 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond_fu_246_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_8;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_322 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond_fu_246_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st12_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_8;
            end
        end
        ap_ST_st12_fsm_9 : 
        begin
            if ((~((ap_const_logic_0 == ap_sig_ioackin_memory_inout_ARREADY) & (ap_const_lv1_0 == tmp_2_fu_263_p3)) & ~(ap_const_lv1_0 == tmp_2_fu_263_p3))) begin
                ap_NS_fsm = ap_ST_st21_fsm_16;
            end else if (((ap_const_lv1_0 == tmp_2_fu_263_p3) & ~((ap_const_logic_0 == ap_sig_ioackin_memory_inout_ARREADY) & (ap_const_lv1_0 == tmp_2_fu_263_p3)))) begin
                ap_NS_fsm = ap_ST_st13_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_9;
            end
        end
        ap_ST_st13_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_11;
        end
        ap_ST_st14_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_12;
        end
        ap_ST_st15_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_13;
        end
        ap_ST_st16_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_14;
        end
        ap_ST_st17_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_15;
        end
        ap_ST_pp1_stg0_fsm_15 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_290_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_15;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_345 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_290_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_st21_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_15;
            end
        end
        ap_ST_st21_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_17;
        end
        ap_ST_st22_fsm_17 : 
        begin
            if (((ap_const_lv1_0 == tmp_5_fu_307_p3) & ~(((ap_const_lv1_0 == tmp_5_fu_307_p3) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_AWREADY)) | (ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done)))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_18;
            end else if ((~(((ap_const_lv1_0 == tmp_5_fu_307_p3) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_AWREADY)) | (ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done)) & ~(ap_const_lv1_0 == tmp_5_fu_307_p3))) begin
                ap_NS_fsm = ap_ST_st29_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_17;
            end
        end
        ap_ST_pp2_stg0_fsm_18 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_lv1_0 == exitcond2_fu_334_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_18;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_memory_inout_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_lv1_0 == exitcond2_fu_334_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_st26_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_18;
            end
        end
        ap_ST_st26_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_20;
        end
        ap_ST_st27_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_21;
        end
        ap_ST_st28_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_22;
        end
        ap_ST_st29_fsm_22 : 
        begin
            if (~ap_sig_bdd_606) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st29_fsm_22;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_313 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_313 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_322 assign process. ///
always @ (memory_inout_RVALID or exitcond_reg_377)
begin
    ap_sig_bdd_322 = ((memory_inout_RVALID == ap_const_logic_0) & (exitcond_reg_377 == ap_const_lv1_0));
end

/// ap_sig_bdd_338 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_338 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_345 assign process. ///
always @ (memory_inout_RVALID or exitcond1_reg_395)
begin
    ap_sig_bdd_345 = ((memory_inout_RVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond1_reg_395));
end

/// ap_sig_bdd_367 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_367 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_383 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_383 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_403 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_403 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_425 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_425 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_446 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_446 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_480 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_480 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_492 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_492 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_546 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_546 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_561 assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_9 or tmp_2_fu_263_p3)
begin
    ap_sig_bdd_561 = ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_9) & (ap_const_lv1_0 == tmp_2_fu_263_p3));
end

/// ap_sig_bdd_563 assign process. ///
always @ (tmp_5_fu_307_p3 or ap_sig_cseq_ST_st22_fsm_17)
begin
    ap_sig_bdd_563 = ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_17) & (ap_const_lv1_0 == tmp_5_fu_307_p3));
end

/// ap_sig_bdd_589 assign process. ///
always @ (ap_reg_ppstg_exitcond2_reg_413_pp2_it1 or ap_reg_ppiten_pp2_it2)
begin
    ap_sig_bdd_589 = ((ap_const_lv1_0 == ap_reg_ppstg_exitcond2_reg_413_pp2_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2));
end

/// ap_sig_bdd_601 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_601 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_606 assign process. ///
always @ (memory_inout_BVALID or tmp_5_reg_404)
begin
    ap_sig_bdd_606 = ((memory_inout_BVALID == ap_const_logic_0) & (ap_const_lv1_0 == tmp_5_reg_404));
end

/// ap_sig_bdd_64 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_64 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_775 assign process. ///
always @ (memory_inout_AWREADY or grp_foo_foo_user_fu_203_ap_done)
begin
    ap_sig_bdd_775 = ((ap_const_logic_1 == memory_inout_AWREADY) & ~(ap_const_logic_0 == grp_foo_foo_user_fu_203_ap_done));
end
assign block_in_int_d0 = reg_212;
assign exitcond1_fu_290_p2 = (indvar8_phi_fu_184_p4 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond2_fu_334_p2 = (indvar1_reg_192 == ap_const_lv3_5? 1'b1: 1'b0);
assign exitcond_fu_246_p2 = (indvar_phi_fu_172_p4 == ap_const_lv3_5? 1'b1: 1'b0);
assign foo_BUS_A_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign foo_memory_inout_m_axi_U_ap_dummy_ce = ap_const_logic_1;
assign grp_foo_foo_user_fu_203_ap_start = grp_foo_foo_user_fu_203_ap_start_ap_start_reg;
assign grp_foo_foo_user_fu_203_block_in_int_q0 = block_in_int_q0;
assign grp_foo_foo_user_fu_203_x_in_in_int_q0 = x_in_in_int_q0;
assign indvar_next1_fu_340_p2 = (indvar1_reg_192 + ap_const_lv3_1);
assign indvar_next9_fu_296_p2 = (indvar8_phi_fu_184_p4 + ap_const_lv3_1);
assign indvar_next_fu_252_p2 = (indvar_phi_fu_172_p4 + ap_const_lv3_1);
assign memory_inout_ARBURST = ap_const_lv2_0;
assign memory_inout_ARCACHE = ap_const_lv4_0;
assign memory_inout_ARID = ap_const_lv1_0;
assign memory_inout_ARLEN = ap_const_lv32_5;
assign memory_inout_ARLOCK = ap_const_lv2_0;
assign memory_inout_ARPROT = ap_const_lv3_0;
assign memory_inout_ARQOS = ap_const_lv4_0;
assign memory_inout_ARREGION = ap_const_lv4_0;
assign memory_inout_ARSIZE = ap_const_lv3_0;
assign memory_inout_ARUSER = ap_const_lv1_0;
assign memory_inout_AWADDR = tmp_6_fu_323_p1;
assign memory_inout_AWBURST = ap_const_lv2_0;
assign memory_inout_AWCACHE = ap_const_lv4_0;
assign memory_inout_AWID = ap_const_lv1_0;
assign memory_inout_AWLEN = ap_const_lv32_5;
assign memory_inout_AWLOCK = ap_const_lv2_0;
assign memory_inout_AWPROT = ap_const_lv3_0;
assign memory_inout_AWQOS = ap_const_lv4_0;
assign memory_inout_AWREGION = ap_const_lv4_0;
assign memory_inout_AWSIZE = ap_const_lv3_0;
assign memory_inout_AWUSER = ap_const_lv1_0;
assign memory_inout_WDATA = y_out_out_int_load_reg_427;
assign memory_inout_WID = ap_const_lv1_0;
assign memory_inout_WLAST = ap_const_logic_0;
assign memory_inout_WSTRB = ap_const_lv4_F;
assign memory_inout_WUSER = ap_const_lv1_0;
assign tmp_1_fu_236_p1 = tmp_1_cast_reg_366;
assign tmp_2_fu_263_p3 = byte_x_in_in_offset_read_reg_357[ap_const_lv32_1F];
assign tmp_3_fu_258_p1 = ap_reg_ppstg_indvar_reg_168_pp0_it1;
assign tmp_4_fu_279_p1 = tmp_5_cast_fu_270_p4;
assign tmp_5_cast_fu_270_p4 = {{byte_x_in_in_offset_read_reg_357[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_5_fu_307_p3 = byte_y_out_out_offset_read_reg_351[ap_const_lv32_1F];
assign tmp_6_fu_323_p1 = tmp_9_cast_fu_314_p4;
assign tmp_7_fu_302_p1 = ap_reg_ppstg_indvar8_reg_180_pp1_it1;
assign tmp_9_cast_fu_314_p4 = {{byte_y_out_out_offset_read_reg_351[ap_const_lv32_1F : ap_const_lv32_2]}};
assign tmp_fu_218_p3 = byte_block_in_offset_0_data_reg[ap_const_lv32_1F];
assign tmp_s_fu_346_p1 = indvar1_reg_192;
assign x_in_in_int_d0 = reg_212;
assign y_out_out_int_d0 = grp_foo_foo_user_fu_203_y_out_out_int_d0;
always @ (posedge ap_clk)
begin
    byte_block_in_offset_0_vld_reg <= 1'b0;
    byte_x_in_in_offset_0_vld_reg <= 1'b0;
    byte_y_out_out_offset_0_vld_reg <= 1'b0;
end



endmodule //foo

