

================================================================
== Vivado HLS Report for 'foo'
================================================================
* Date:           Fri Feb  3 10:31:24 2017

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        my_project0
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  396|  431|  397|  432|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------------------------------------------------------------------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                                                                                                    |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |                                              Loop Name                                             | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------------------------------------------------------------------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- memcpy.foo(unsigned int, unsigned int, unsigned int, float volatile*)::block_in_int.memory_inout  |    6|    6|         3|          1|          1|     5|    yes   |
        |- memcpy.foo(unsigned int, unsigned int, unsigned int, float volatile*)::x_in_in_int.memory_inout   |    6|    6|         3|          1|          1|     5|    yes   |
        |- memcpy.memory_inout.y_out_out_int.gep                                                             |    6|    6|         3|          1|          1|     5|    yes   |
        +----------------------------------------------------------------------------------------------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+---------------------+-----+-----+---------+--------------+--------+
|      RTL Ports      | Dir | Bits| Protocol| Source Object| C Type |
+---------------------+-----+-----+---------+--------------+--------+
|s_axi_BUS_A_AWVALID  |  in |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_AWREADY  | out |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_AWADDR   |  in |    6|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_WVALID   |  in |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_WREADY   | out |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_WDATA    |  in |   32|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_WSTRB    |  in |    4|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_ARVALID  |  in |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_ARREADY  | out |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_ARADDR   |  in |    6|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_RVALID   | out |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_RREADY   |  in |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_RDATA    | out |   32|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_RRESP    | out |    2|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_BVALID   | out |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_BREADY   |  in |    1|  s_axi  |     BUS_A    | scalar |
|s_axi_BUS_A_BRESP    | out |    2|  s_axi  |     BUS_A    | scalar |
+---------------------+-----+-----+---------+--------------+--------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3
  * Pipeline-2: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 29
* Pipeline: 3
  Pipeline-0: II = 1, D = 3, States = { 9 10 11 }
  Pipeline-1: II = 1, D = 3, States = { 18 19 20 }
  Pipeline-2: II = 1, D = 3, States = { 23 24 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp)
	12  / (tmp)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	12  / (exitcond)
	10  / (!exitcond)
10 --> 
	11  / true
11 --> 
	9  / true
12 --> 
	13  / (!tmp_2)
	21  / (tmp_2)
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	21  / (exitcond1)
	19  / (!exitcond1)
19 --> 
	20  / true
20 --> 
	18  / true
21 --> 
	22  / true
22 --> 
	29  / (tmp_5)
	23  / (!tmp_5)
23 --> 
	26  / (exitcond2)
	24  / (!exitcond2)
24 --> 
	25  / true
25 --> 
	23  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
* FSM state operations: 

 <State 1>: 1.00ns
ST_1: byte_y_out_out_offset_read [2/2] 1.00ns
:5  %byte_y_out_out_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %byte_y_out_out_offset) nounwind

ST_1: byte_x_in_in_offset_read [2/2] 1.00ns
:6  %byte_x_in_in_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %byte_x_in_in_offset) nounwind

ST_1: byte_block_in_offset_read [2/2] 1.00ns
:7  %byte_block_in_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %byte_block_in_offset) nounwind

ST_1: y_out_out_int [1/1] 0.00ns
:8  %y_out_out_int = alloca [5 x float], align 16


 <State 2>: 2.37ns
ST_2: stg_34 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32 %byte_block_in_offset) nounwind, !map !7

ST_2: stg_35 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 %byte_x_in_in_offset) nounwind, !map !13

ST_2: stg_36 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32 %byte_y_out_out_offset) nounwind, !map !17

ST_2: stg_37 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(float* %memory_inout) nounwind, !map !21

ST_2: stg_38 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @foo_str) nounwind

ST_2: byte_y_out_out_offset_read [1/2] 1.00ns
:5  %byte_y_out_out_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %byte_y_out_out_offset) nounwind

ST_2: byte_x_in_in_offset_read [1/2] 1.00ns
:6  %byte_x_in_in_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %byte_x_in_in_offset) nounwind

ST_2: byte_block_in_offset_read [1/2] 1.00ns
:7  %byte_block_in_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %byte_block_in_offset) nounwind

ST_2: stg_42 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecInterface(i32 %byte_y_out_out_offset, [10 x i8]* @p_str1804, i32 1, i32 1, i32 0, i32 0, [6 x i8]* @p_str1805, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_2: stg_43 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecInterface(i32 %byte_x_in_in_offset, [10 x i8]* @p_str1804, i32 1, i32 1, i32 0, i32 0, [6 x i8]* @p_str1805, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_2: stg_44 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecInterface(i32 %byte_block_in_offset, [10 x i8]* @p_str1804, i32 1, i32 1, i32 0, i32 0, [6 x i8]* @p_str1805, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_2: stg_45 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1804, i32 0, i32 0, i32 0, i32 0, [6 x i8]* @p_str1805, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_2: stg_46 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecInterface(float* %memory_inout, [6 x i8]* @p_str1807, i32 0, i32 0, i32 0, i32 15, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_2: tmp [1/1] 0.00ns
:14  %tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %byte_block_in_offset_read, i32 31)

ST_2: stg_48 [1/1] 0.00ns
:15  br i1 %tmp, label %._crit_edge, label %1

ST_2: tmp_1_cast [1/1] 0.00ns
:0  %tmp_1_cast = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %byte_block_in_offset_read, i32 2, i32 31)


 <State 3>: 8.75ns
ST_3: tmp_1 [1/1] 0.00ns
:1  %tmp_1 = zext i30 %tmp_1_cast to i64

ST_3: memory_inout_addr [1/1] 0.00ns
:2  %memory_inout_addr = getelementptr float* %memory_inout, i64 %tmp_1

ST_3: p_rd_req [6/6] 8.75ns
:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr, i32 5) nounwind


 <State 4>: 8.75ns
ST_4: p_rd_req [5/6] 8.75ns
:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr, i32 5) nounwind


 <State 5>: 8.75ns
ST_5: p_rd_req [4/6] 8.75ns
:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr, i32 5) nounwind


 <State 6>: 8.75ns
ST_6: p_rd_req [3/6] 8.75ns
:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr, i32 5) nounwind


 <State 7>: 8.75ns
ST_7: p_rd_req [2/6] 8.75ns
:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr, i32 5) nounwind


 <State 8>: 8.75ns
ST_8: p_rd_req [1/6] 8.75ns
:3  %p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr, i32 5) nounwind

ST_8: stg_58 [1/1] 1.57ns
:4  br label %burst.rd.header


 <State 9>: 1.62ns
ST_9: indvar [1/1] 0.00ns
burst.rd.header:0  %indvar = phi i3 [ 0, %1 ], [ %indvar_next, %burst.rd.body ]

ST_9: exitcond [1/1] 1.62ns
burst.rd.header:1  %exitcond = icmp eq i3 %indvar, -3

ST_9: empty [1/1] 0.00ns
burst.rd.header:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_9: indvar_next [1/1] 0.80ns
burst.rd.header:3  %indvar_next = add i3 %indvar, 1

ST_9: stg_63 [1/1] 0.00ns
burst.rd.header:4  br i1 %exitcond, label %._crit_edge, label %burst.rd.body


 <State 10>: 8.75ns
ST_10: memory_inout_addr_read [1/1] 8.75ns
burst.rd.body:3  %memory_inout_addr_read = call float @_ssdm_op_Read.m_axi.floatP(float* %memory_inout_addr) nounwind


 <State 11>: 2.39ns
ST_11: burstread_rbegin [1/1] 0.00ns
burst.rd.body:0  %burstread_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_str) nounwind

ST_11: empty_4 [1/1] 0.00ns
burst.rd.body:1  %empty_4 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_11: stg_67 [1/1] 0.00ns
burst.rd.body:2  call void (...)* @_ssdm_op_SpecLoopName([97 x i8]* @memcpy_OC_foo_IC_unsigned_AC_i)

ST_11: tmp_3 [1/1] 0.00ns
burst.rd.body:4  %tmp_3 = zext i3 %indvar to i64

ST_11: block_in_int_addr [1/1] 0.00ns
burst.rd.body:5  %block_in_int_addr = getelementptr [5 x float]* @block_in_int, i64 0, i64 %tmp_3

ST_11: stg_70 [1/1] 2.39ns
burst.rd.body:6  store float %memory_inout_addr_read, float* %block_in_int_addr, align 4

ST_11: burstread_rend [1/1] 0.00ns
burst.rd.body:7  %burstread_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_str, i32 %burstread_rbegin) nounwind

ST_11: stg_72 [1/1] 0.00ns
burst.rd.body:8  br label %burst.rd.header


 <State 12>: 8.75ns
ST_12: tmp_2 [1/1] 0.00ns
._crit_edge:0  %tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %byte_x_in_in_offset_read, i32 31)

ST_12: stg_74 [1/1] 0.00ns
._crit_edge:1  br i1 %tmp_2, label %._crit_edge1, label %2

ST_12: tmp_5_cast [1/1] 0.00ns
:0  %tmp_5_cast = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %byte_x_in_in_offset_read, i32 2, i32 31)

ST_12: tmp_4 [1/1] 0.00ns
:1  %tmp_4 = zext i30 %tmp_5_cast to i64

ST_12: memory_inout_addr_1 [1/1] 0.00ns
:2  %memory_inout_addr_1 = getelementptr float* %memory_inout, i64 %tmp_4

ST_12: p_rd_req1 [6/6] 8.75ns
:3  %p_rd_req1 = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr_1, i32 5) nounwind


 <State 13>: 8.75ns
ST_13: p_rd_req1 [5/6] 8.75ns
:3  %p_rd_req1 = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr_1, i32 5) nounwind


 <State 14>: 8.75ns
ST_14: p_rd_req1 [4/6] 8.75ns
:3  %p_rd_req1 = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr_1, i32 5) nounwind


 <State 15>: 8.75ns
ST_15: p_rd_req1 [3/6] 8.75ns
:3  %p_rd_req1 = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr_1, i32 5) nounwind


 <State 16>: 8.75ns
ST_16: p_rd_req1 [2/6] 8.75ns
:3  %p_rd_req1 = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr_1, i32 5) nounwind


 <State 17>: 8.75ns
ST_17: p_rd_req1 [1/6] 8.75ns
:3  %p_rd_req1 = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %memory_inout_addr_1, i32 5) nounwind

ST_17: stg_84 [1/1] 1.57ns
:4  br label %burst.rd.header6


 <State 18>: 1.62ns
ST_18: indvar8 [1/1] 0.00ns
burst.rd.header6:0  %indvar8 = phi i3 [ 0, %2 ], [ %indvar_next9, %burst.rd.body7 ]

ST_18: exitcond1 [1/1] 1.62ns
burst.rd.header6:1  %exitcond1 = icmp eq i3 %indvar8, -3

ST_18: empty_5 [1/1] 0.00ns
burst.rd.header6:2  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_18: indvar_next9 [1/1] 0.80ns
burst.rd.header6:3  %indvar_next9 = add i3 %indvar8, 1

ST_18: stg_89 [1/1] 0.00ns
burst.rd.header6:4  br i1 %exitcond1, label %._crit_edge1, label %burst.rd.body7


 <State 19>: 8.75ns
ST_19: memory_inout_addr_1_read [1/1] 8.75ns
burst.rd.body7:3  %memory_inout_addr_1_read = call float @_ssdm_op_Read.m_axi.floatP(float* %memory_inout_addr_1) nounwind


 <State 20>: 2.39ns
ST_20: burstread_rbegin1 [1/1] 0.00ns
burst.rd.body7:0  %burstread_rbegin1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_str) nounwind

ST_20: empty_6 [1/1] 0.00ns
burst.rd.body7:1  %empty_6 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_20: stg_93 [1/1] 0.00ns
burst.rd.body7:2  call void (...)* @_ssdm_op_SpecLoopName([96 x i8]* @memcpy_OC_foo_IC_unsigned_AC_i_1)

ST_20: tmp_7 [1/1] 0.00ns
burst.rd.body7:4  %tmp_7 = zext i3 %indvar8 to i64

ST_20: x_in_in_int_addr [1/1] 0.00ns
burst.rd.body7:5  %x_in_in_int_addr = getelementptr [5 x float]* @x_in_in_int, i64 0, i64 %tmp_7

ST_20: stg_96 [1/1] 2.39ns
burst.rd.body7:6  store float %memory_inout_addr_1_read, float* %x_in_in_int_addr, align 4

ST_20: burstread_rend16 [1/1] 0.00ns
burst.rd.body7:7  %burstread_rend16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_str, i32 %burstread_rbegin1) nounwind

ST_20: stg_98 [1/1] 0.00ns
burst.rd.body7:8  br label %burst.rd.header6


 <State 21>: 0.00ns
ST_21: stg_99 [2/2] 0.00ns
._crit_edge1:0  call fastcc void @foo_foo_user([5 x float]* @block_in_int, [5 x float]* @x_in_in_int, [5 x float]* %y_out_out_int) nounwind


 <State 22>: 8.75ns
ST_22: stg_100 [1/2] 0.00ns
._crit_edge1:0  call fastcc void @foo_foo_user([5 x float]* @block_in_int, [5 x float]* @x_in_in_int, [5 x float]* %y_out_out_int) nounwind

ST_22: tmp_5 [1/1] 0.00ns
._crit_edge1:1  %tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %byte_y_out_out_offset_read, i32 31)

ST_22: stg_102 [1/1] 0.00ns
._crit_edge1:2  br i1 %tmp_5, label %._crit_edge2, label %3

ST_22: tmp_9_cast [1/1] 0.00ns
:0  %tmp_9_cast = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %byte_y_out_out_offset_read, i32 2, i32 31)

ST_22: tmp_6 [1/1] 0.00ns
:1  %tmp_6 = zext i30 %tmp_9_cast to i64

ST_22: memory_inout_addr_2 [1/1] 0.00ns
:2  %memory_inout_addr_2 = getelementptr float* %memory_inout, i64 %tmp_6

ST_22: p_wr_req [1/1] 8.75ns
:3  %p_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %memory_inout_addr_2, i32 5) nounwind

ST_22: stg_107 [1/1] 1.57ns
:4  br label %burst.wr.header


 <State 23>: 2.99ns
ST_23: indvar1 [1/1] 0.00ns
burst.wr.header:0  %indvar1 = phi i3 [ 0, %3 ], [ %indvar_next1, %burst.wr.body ]

ST_23: exitcond2 [1/1] 1.62ns
burst.wr.header:1  %exitcond2 = icmp eq i3 %indvar1, -3

ST_23: empty_7 [1/1] 0.00ns
burst.wr.header:2  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_23: indvar_next1 [1/1] 0.80ns
burst.wr.header:3  %indvar_next1 = add i3 %indvar1, 1

ST_23: stg_112 [1/1] 0.00ns
burst.wr.header:4  br i1 %exitcond2, label %._crit_edge2.loopexit, label %burst.wr.body

ST_23: tmp_s [1/1] 0.00ns
burst.wr.body:3  %tmp_s = zext i3 %indvar1 to i64

ST_23: y_out_out_int_addr [1/1] 0.00ns
burst.wr.body:4  %y_out_out_int_addr = getelementptr [5 x float]* %y_out_out_int, i64 0, i64 %tmp_s

ST_23: y_out_out_int_load [2/2] 2.39ns
burst.wr.body:5  %y_out_out_int_load = load float* %y_out_out_int_addr, align 4


 <State 24>: 2.39ns
ST_24: y_out_out_int_load [1/2] 2.39ns
burst.wr.body:5  %y_out_out_int_load = load float* %y_out_out_int_addr, align 4


 <State 25>: 8.75ns
ST_25: burstwrite_rbegin [1/1] 0.00ns
burst.wr.body:0  %burstwrite_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @burstwrite_OC_region_str) nounwind

ST_25: empty_8 [1/1] 0.00ns
burst.wr.body:1  %empty_8 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str15) nounwind

ST_25: stg_119 [1/1] 0.00ns
burst.wr.body:2  call void (...)* @_ssdm_op_SpecLoopName([38 x i8]* @memcpy_OC_memory_inout_OC_y_ou)

ST_25: stg_120 [1/1] 8.75ns
burst.wr.body:6  call void @_ssdm_op_Write.m_axi.floatP(float* %memory_inout_addr_2, float %y_out_out_int_load) nounwind

ST_25: burstwrite_rend [1/1] 0.00ns
burst.wr.body:7  %burstwrite_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @burstwrite_OC_region_str, i32 %burstwrite_rbegin) nounwind

ST_25: stg_122 [1/1] 0.00ns
burst.wr.body:8  br label %burst.wr.header


 <State 26>: 8.75ns
ST_26: p_wr_resp [4/4] 8.75ns
._crit_edge2.loopexit:0  %p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %memory_inout_addr_2) nounwind


 <State 27>: 8.75ns
ST_27: p_wr_resp [3/4] 8.75ns
._crit_edge2.loopexit:0  %p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %memory_inout_addr_2) nounwind


 <State 28>: 8.75ns
ST_28: p_wr_resp [2/4] 8.75ns
._crit_edge2.loopexit:0  %p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %memory_inout_addr_2) nounwind


 <State 29>: 8.75ns
ST_29: p_wr_resp [1/4] 8.75ns
._crit_edge2.loopexit:0  %p_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %memory_inout_addr_2) nounwind

ST_29: stg_127 [1/1] 0.00ns
._crit_edge2.loopexit:1  br label %._crit_edge2

ST_29: stg_128 [1/1] 0.00ns
._crit_edge2:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
