// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "foo_foo_user.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic foo_foo_user::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic foo_foo_user::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> foo_foo_user::ap_ST_st1_fsm_0 = "1";
const sc_lv<17> foo_foo_user::ap_ST_st2_fsm_1 = "10";
const sc_lv<17> foo_foo_user::ap_ST_st3_fsm_2 = "100";
const sc_lv<17> foo_foo_user::ap_ST_st4_fsm_3 = "1000";
const sc_lv<17> foo_foo_user::ap_ST_st5_fsm_4 = "10000";
const sc_lv<17> foo_foo_user::ap_ST_st6_fsm_5 = "100000";
const sc_lv<17> foo_foo_user::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<17> foo_foo_user::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<17> foo_foo_user::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<17> foo_foo_user::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<17> foo_foo_user::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<17> foo_foo_user::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<17> foo_foo_user::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<17> foo_foo_user::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<17> foo_foo_user::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<17> foo_foo_user::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<17> foo_foo_user::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<32> foo_foo_user::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> foo_foo_user::ap_const_lv1_1 = "1";
const sc_lv<32> foo_foo_user::ap_const_lv32_1 = "1";
const sc_lv<1> foo_foo_user::ap_const_lv1_0 = "0";
const sc_lv<32> foo_foo_user::ap_const_lv32_2 = "10";
const sc_lv<32> foo_foo_user::ap_const_lv32_3 = "11";
const sc_lv<32> foo_foo_user::ap_const_lv32_8 = "1000";
const sc_lv<32> foo_foo_user::ap_const_lv32_9 = "1001";
const sc_lv<32> foo_foo_user::ap_const_lv32_A = "1010";
const sc_lv<32> foo_foo_user::ap_const_lv32_F = "1111";
const sc_lv<3> foo_foo_user::ap_const_lv3_0 = "000";
const sc_lv<32> foo_foo_user::ap_const_lv32_10 = "10000";
const sc_lv<32> foo_foo_user::ap_const_lv32_4 = "100";
const sc_lv<32> foo_foo_user::ap_const_lv32_B = "1011";
const sc_lv<3> foo_foo_user::ap_const_lv3_5 = "101";
const sc_lv<3> foo_foo_user::ap_const_lv3_1 = "1";

foo_foo_user::foo_foo_user(sc_module_name name) : sc_module(name), mVcdFile(0) {
    foo_fadd_32ns_32ns_32_5_full_dsp_U1 = new foo_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("foo_fadd_32ns_32ns_32_5_full_dsp_U1");
    foo_fadd_32ns_32ns_32_5_full_dsp_U1->clk(ap_clk);
    foo_fadd_32ns_32ns_32_5_full_dsp_U1->reset(ap_rst);
    foo_fadd_32ns_32ns_32_5_full_dsp_U1->din0(grp_fu_124_p0);
    foo_fadd_32ns_32ns_32_5_full_dsp_U1->din1(grp_fu_124_p1);
    foo_fadd_32ns_32ns_32_5_full_dsp_U1->ce(grp_fu_124_ce);
    foo_fadd_32ns_32ns_32_5_full_dsp_U1->dout(grp_fu_124_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond2_fu_130_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond2_fu_130_p2 );

    SC_METHOD(thread_ap_sig_bdd_103);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_125);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_133);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_154);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_171);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_178);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_bdd_112 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_bdd_125 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_178 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_bdd_133 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_bdd_154 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_35 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_66 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_81 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_94 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_171 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_bdd_103 );

    SC_METHOD(thread_block_in_int_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_2_fu_159_p1 );

    SC_METHOD(thread_block_in_int_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_exitcond1_fu_147_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( i_block_reg_91 );

    SC_METHOD(thread_exitcond2_fu_130_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_67 );

    SC_METHOD(thread_exitcond_fu_164_p2);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( i_x_in_reg_113 );

    SC_METHOD(thread_grp_fu_124_ce);

    SC_METHOD(thread_grp_fu_124_p0);
    sensitive << ( storemerge_reg_78 );
    sensitive << ( tmp_4_reg_102 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_grp_fu_124_p1);
    sensitive << ( block_in_int_load_reg_207 );
    sensitive << ( x_in_in_int_load_reg_230 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_i_1_fu_136_p2);
    sensitive << ( i_reg_67 );

    SC_METHOD(thread_i_block_1_fu_153_p2);
    sensitive << ( i_block_reg_91 );

    SC_METHOD(thread_i_x_in_1_fu_170_p2);
    sensitive << ( i_x_in_reg_113 );

    SC_METHOD(thread_tmp_2_fu_159_p1);
    sensitive << ( i_block_reg_91 );

    SC_METHOD(thread_tmp_5_fu_176_p1);
    sensitive << ( i_x_in_reg_113 );

    SC_METHOD(thread_tmp_fu_142_p1);
    sensitive << ( i_reg_67 );

    SC_METHOD(thread_x_in_in_int_address0);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( tmp_5_fu_176_p1 );

    SC_METHOD(thread_x_in_in_int_ce0);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );

    SC_METHOD(thread_y_out_out_int_address0);
    sensitive << ( y_out_out_int_addr_reg_189 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );

    SC_METHOD(thread_y_out_out_int_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );

    SC_METHOD(thread_y_out_out_int_d0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_6_reg_235 );
    sensitive << ( storemerge_reg_78 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );

    SC_METHOD(thread_y_out_out_int_we0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond2_fu_130_p2 );
    sensitive << ( exitcond1_fu_147_p2 );
    sensitive << ( exitcond_fu_164_p2 );

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "foo_foo_user_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, block_in_int_address0, "(port)block_in_int_address0");
    sc_trace(mVcdFile, block_in_int_ce0, "(port)block_in_int_ce0");
    sc_trace(mVcdFile, block_in_int_q0, "(port)block_in_int_q0");
    sc_trace(mVcdFile, x_in_in_int_address0, "(port)x_in_in_int_address0");
    sc_trace(mVcdFile, x_in_in_int_ce0, "(port)x_in_in_int_ce0");
    sc_trace(mVcdFile, x_in_in_int_q0, "(port)x_in_in_int_q0");
    sc_trace(mVcdFile, y_out_out_int_address0, "(port)y_out_out_int_address0");
    sc_trace(mVcdFile, y_out_out_int_ce0, "(port)y_out_out_int_ce0");
    sc_trace(mVcdFile, y_out_out_int_we0, "(port)y_out_out_int_we0");
    sc_trace(mVcdFile, y_out_out_int_d0, "(port)y_out_out_int_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_35, "ap_sig_bdd_35");
    sc_trace(mVcdFile, i_1_fu_136_p2, "i_1_fu_136_p2");
    sc_trace(mVcdFile, i_1_reg_184, "i_1_reg_184");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_66, "ap_sig_bdd_66");
    sc_trace(mVcdFile, y_out_out_int_addr_reg_189, "y_out_out_int_addr_reg_189");
    sc_trace(mVcdFile, exitcond2_fu_130_p2, "exitcond2_fu_130_p2");
    sc_trace(mVcdFile, i_block_1_fu_153_p2, "i_block_1_fu_153_p2");
    sc_trace(mVcdFile, i_block_1_reg_197, "i_block_1_reg_197");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_81, "ap_sig_bdd_81");
    sc_trace(mVcdFile, exitcond1_fu_147_p2, "exitcond1_fu_147_p2");
    sc_trace(mVcdFile, block_in_int_load_reg_207, "block_in_int_load_reg_207");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_94, "ap_sig_bdd_94");
    sc_trace(mVcdFile, grp_fu_124_p2, "grp_fu_124_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_103, "ap_sig_bdd_103");
    sc_trace(mVcdFile, i_x_in_1_fu_170_p2, "i_x_in_1_fu_170_p2");
    sc_trace(mVcdFile, i_x_in_1_reg_220, "i_x_in_1_reg_220");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_112, "ap_sig_bdd_112");
    sc_trace(mVcdFile, exitcond_fu_164_p2, "exitcond_fu_164_p2");
    sc_trace(mVcdFile, x_in_in_int_load_reg_230, "x_in_in_int_load_reg_230");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_125, "ap_sig_bdd_125");
    sc_trace(mVcdFile, tmp_6_reg_235, "tmp_6_reg_235");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_bdd_133, "ap_sig_bdd_133");
    sc_trace(mVcdFile, i_reg_67, "i_reg_67");
    sc_trace(mVcdFile, storemerge_reg_78, "storemerge_reg_78");
    sc_trace(mVcdFile, i_block_reg_91, "i_block_reg_91");
    sc_trace(mVcdFile, tmp_4_reg_102, "tmp_4_reg_102");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_bdd_154, "ap_sig_bdd_154");
    sc_trace(mVcdFile, i_x_in_reg_113, "i_x_in_reg_113");
    sc_trace(mVcdFile, tmp_fu_142_p1, "tmp_fu_142_p1");
    sc_trace(mVcdFile, tmp_2_fu_159_p1, "tmp_2_fu_159_p1");
    sc_trace(mVcdFile, tmp_5_fu_176_p1, "tmp_5_fu_176_p1");
    sc_trace(mVcdFile, grp_fu_124_p0, "grp_fu_124_p0");
    sc_trace(mVcdFile, grp_fu_124_p1, "grp_fu_124_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_171, "ap_sig_bdd_171");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_178, "ap_sig_bdd_178");
    sc_trace(mVcdFile, grp_fu_124_ce, "grp_fu_124_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

foo_foo_user::~foo_foo_user() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete foo_fadd_32ns_32ns_32_5_full_dsp_U1;
}

void foo_foo_user::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        i_block_reg_91 = i_block_1_reg_197.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0))) {
        i_block_reg_91 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_164_p2.read()))) {
        i_reg_67 = i_1_reg_184.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_67 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_147_p2.read()))) {
        i_x_in_reg_113 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        i_x_in_reg_113 = i_x_in_1_reg_220.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        storemerge_reg_78 = grp_fu_124_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0))) {
        storemerge_reg_78 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_147_p2.read()))) {
        tmp_4_reg_102 = storemerge_reg_78.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        tmp_4_reg_102 = tmp_6_reg_235.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        block_in_int_load_reg_207 = block_in_int_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_1_reg_184 = i_1_fu_136_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        i_block_1_reg_197 = i_block_1_fu_153_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        i_x_in_1_reg_220 = i_x_in_1_fu_170_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        tmp_6_reg_235 = grp_fu_124_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        x_in_in_int_load_reg_230 = x_in_in_int_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0))) {
        y_out_out_int_addr_reg_189 =  (sc_lv<3>) (tmp_fu_142_p1.read());
    }
}

void foo_foo_user::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_bdd_103() {
    ap_sig_bdd_103 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void foo_foo_user::thread_ap_sig_bdd_112() {
    ap_sig_bdd_112 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void foo_foo_user::thread_ap_sig_bdd_125() {
    ap_sig_bdd_125 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void foo_foo_user::thread_ap_sig_bdd_133() {
    ap_sig_bdd_133 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void foo_foo_user::thread_ap_sig_bdd_154() {
    ap_sig_bdd_154 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void foo_foo_user::thread_ap_sig_bdd_171() {
    ap_sig_bdd_171 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void foo_foo_user::thread_ap_sig_bdd_178() {
    ap_sig_bdd_178 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void foo_foo_user::thread_ap_sig_bdd_35() {
    ap_sig_bdd_35 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void foo_foo_user::thread_ap_sig_bdd_66() {
    ap_sig_bdd_66 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void foo_foo_user::thread_ap_sig_bdd_81() {
    ap_sig_bdd_81 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void foo_foo_user::thread_ap_sig_bdd_94() {
    ap_sig_bdd_94 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void foo_foo_user::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_bdd_112.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_bdd_125.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_178.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_bdd_133.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_bdd_154.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_35.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_66.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_81.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_94.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_171.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_bdd_103.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_block_in_int_address0() {
    block_in_int_address0 =  (sc_lv<3>) (tmp_2_fu_159_p1.read());
}

void foo_foo_user::thread_block_in_int_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        block_in_int_ce0 = ap_const_logic_1;
    } else {
        block_in_int_ce0 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_exitcond1_fu_147_p2() {
    exitcond1_fu_147_p2 = (!i_block_reg_91.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_block_reg_91.read() == ap_const_lv3_5);
}

void foo_foo_user::thread_exitcond2_fu_130_p2() {
    exitcond2_fu_130_p2 = (!i_reg_67.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_67.read() == ap_const_lv3_5);
}

void foo_foo_user::thread_exitcond_fu_164_p2() {
    exitcond_fu_164_p2 = (!i_x_in_reg_113.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_x_in_reg_113.read() == ap_const_lv3_5);
}

void foo_foo_user::thread_grp_fu_124_ce() {
    grp_fu_124_ce = ap_const_logic_1;
}

void foo_foo_user::thread_grp_fu_124_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        grp_fu_124_p0 = tmp_4_reg_102.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        grp_fu_124_p0 = storemerge_reg_78.read();
    } else {
        grp_fu_124_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void foo_foo_user::thread_grp_fu_124_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        grp_fu_124_p1 = x_in_in_int_load_reg_230.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        grp_fu_124_p1 = block_in_int_load_reg_207.read();
    } else {
        grp_fu_124_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void foo_foo_user::thread_i_1_fu_136_p2() {
    i_1_fu_136_p2 = (!i_reg_67.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_67.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void foo_foo_user::thread_i_block_1_fu_153_p2() {
    i_block_1_fu_153_p2 = (!i_block_reg_91.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_block_reg_91.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void foo_foo_user::thread_i_x_in_1_fu_170_p2() {
    i_x_in_1_fu_170_p2 = (!i_x_in_reg_113.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_x_in_reg_113.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void foo_foo_user::thread_tmp_2_fu_159_p1() {
    tmp_2_fu_159_p1 = esl_zext<64,3>(i_block_reg_91.read());
}

void foo_foo_user::thread_tmp_5_fu_176_p1() {
    tmp_5_fu_176_p1 = esl_zext<64,3>(i_x_in_reg_113.read());
}

void foo_foo_user::thread_tmp_fu_142_p1() {
    tmp_fu_142_p1 = esl_zext<64,3>(i_reg_67.read());
}

void foo_foo_user::thread_x_in_in_int_address0() {
    x_in_in_int_address0 =  (sc_lv<3>) (tmp_5_fu_176_p1.read());
}

void foo_foo_user::thread_x_in_in_int_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        x_in_in_int_ce0 = ap_const_logic_1;
    } else {
        x_in_in_int_ce0 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_y_out_out_int_address0() {
    y_out_out_int_address0 = y_out_out_int_addr_reg_189.read();
}

void foo_foo_user::thread_y_out_out_int_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()))) {
        y_out_out_int_ce0 = ap_const_logic_1;
    } else {
        y_out_out_int_ce0 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_y_out_out_int_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read())) {
        y_out_out_int_d0 = tmp_6_reg_235.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        y_out_out_int_d0 = storemerge_reg_78.read();
    } else {
        y_out_out_int_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void foo_foo_user::thread_y_out_out_int_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()))) {
        y_out_out_int_we0 = ap_const_logic_1;
    } else {
        y_out_out_int_we0 = ap_const_logic_0;
    }
}

void foo_foo_user::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_147_p2.read())) {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_164_p2.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

