// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _foo_HH_
#define _foo_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "foo_foo_user.h"
#include "foo_block_in_int.h"
#include "foo_y_out_out_int.h"
#include "foo_BUS_A_s_axi.h"
#include "foo_memory_inout_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_BUS_A_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_BUS_A_DATA_WIDTH = 32,
         unsigned int C_M_AXI_MEMORY_INOUT_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_MEMORY_INOUT_ID_WIDTH = 1,
         unsigned int C_M_AXI_MEMORY_INOUT_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEMORY_INOUT_DATA_WIDTH = 32,
         unsigned int C_M_AXI_MEMORY_INOUT_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEMORY_INOUT_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEMORY_INOUT_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEMORY_INOUT_BUSER_WIDTH = 1>
struct foo : public sc_module {
    // Port declarations 65
    sc_in< sc_logic > s_axi_BUS_A_AWVALID;
    sc_out< sc_logic > s_axi_BUS_A_AWREADY;
    sc_in< sc_uint<C_S_AXI_BUS_A_ADDR_WIDTH> > s_axi_BUS_A_AWADDR;
    sc_in< sc_logic > s_axi_BUS_A_WVALID;
    sc_out< sc_logic > s_axi_BUS_A_WREADY;
    sc_in< sc_uint<C_S_AXI_BUS_A_DATA_WIDTH> > s_axi_BUS_A_WDATA;
    sc_in< sc_uint<C_S_AXI_BUS_A_DATA_WIDTH/8> > s_axi_BUS_A_WSTRB;
    sc_in< sc_logic > s_axi_BUS_A_ARVALID;
    sc_out< sc_logic > s_axi_BUS_A_ARREADY;
    sc_in< sc_uint<C_S_AXI_BUS_A_ADDR_WIDTH> > s_axi_BUS_A_ARADDR;
    sc_out< sc_logic > s_axi_BUS_A_RVALID;
    sc_in< sc_logic > s_axi_BUS_A_RREADY;
    sc_out< sc_uint<C_S_AXI_BUS_A_DATA_WIDTH> > s_axi_BUS_A_RDATA;
    sc_out< sc_lv<2> > s_axi_BUS_A_RRESP;
    sc_out< sc_logic > s_axi_BUS_A_BVALID;
    sc_in< sc_logic > s_axi_BUS_A_BREADY;
    sc_out< sc_lv<2> > s_axi_BUS_A_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_memory_inout_AWVALID;
    sc_in< sc_logic > m_axi_memory_inout_AWREADY;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_ADDR_WIDTH> > m_axi_memory_inout_AWADDR;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_ID_WIDTH> > m_axi_memory_inout_AWID;
    sc_out< sc_lv<8> > m_axi_memory_inout_AWLEN;
    sc_out< sc_lv<3> > m_axi_memory_inout_AWSIZE;
    sc_out< sc_lv<2> > m_axi_memory_inout_AWBURST;
    sc_out< sc_lv<2> > m_axi_memory_inout_AWLOCK;
    sc_out< sc_lv<4> > m_axi_memory_inout_AWCACHE;
    sc_out< sc_lv<3> > m_axi_memory_inout_AWPROT;
    sc_out< sc_lv<4> > m_axi_memory_inout_AWQOS;
    sc_out< sc_lv<4> > m_axi_memory_inout_AWREGION;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_AWUSER_WIDTH> > m_axi_memory_inout_AWUSER;
    sc_out< sc_logic > m_axi_memory_inout_WVALID;
    sc_in< sc_logic > m_axi_memory_inout_WREADY;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_DATA_WIDTH> > m_axi_memory_inout_WDATA;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_DATA_WIDTH/8> > m_axi_memory_inout_WSTRB;
    sc_out< sc_logic > m_axi_memory_inout_WLAST;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_ID_WIDTH> > m_axi_memory_inout_WID;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_WUSER_WIDTH> > m_axi_memory_inout_WUSER;
    sc_out< sc_logic > m_axi_memory_inout_ARVALID;
    sc_in< sc_logic > m_axi_memory_inout_ARREADY;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_ADDR_WIDTH> > m_axi_memory_inout_ARADDR;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_ID_WIDTH> > m_axi_memory_inout_ARID;
    sc_out< sc_lv<8> > m_axi_memory_inout_ARLEN;
    sc_out< sc_lv<3> > m_axi_memory_inout_ARSIZE;
    sc_out< sc_lv<2> > m_axi_memory_inout_ARBURST;
    sc_out< sc_lv<2> > m_axi_memory_inout_ARLOCK;
    sc_out< sc_lv<4> > m_axi_memory_inout_ARCACHE;
    sc_out< sc_lv<3> > m_axi_memory_inout_ARPROT;
    sc_out< sc_lv<4> > m_axi_memory_inout_ARQOS;
    sc_out< sc_lv<4> > m_axi_memory_inout_ARREGION;
    sc_out< sc_uint<C_M_AXI_MEMORY_INOUT_ARUSER_WIDTH> > m_axi_memory_inout_ARUSER;
    sc_in< sc_logic > m_axi_memory_inout_RVALID;
    sc_out< sc_logic > m_axi_memory_inout_RREADY;
    sc_in< sc_uint<C_M_AXI_MEMORY_INOUT_DATA_WIDTH> > m_axi_memory_inout_RDATA;
    sc_in< sc_logic > m_axi_memory_inout_RLAST;
    sc_in< sc_uint<C_M_AXI_MEMORY_INOUT_ID_WIDTH> > m_axi_memory_inout_RID;
    sc_in< sc_uint<C_M_AXI_MEMORY_INOUT_RUSER_WIDTH> > m_axi_memory_inout_RUSER;
    sc_in< sc_lv<2> > m_axi_memory_inout_RRESP;
    sc_in< sc_logic > m_axi_memory_inout_BVALID;
    sc_out< sc_logic > m_axi_memory_inout_BREADY;
    sc_in< sc_lv<2> > m_axi_memory_inout_BRESP;
    sc_in< sc_uint<C_M_AXI_MEMORY_INOUT_ID_WIDTH> > m_axi_memory_inout_BID;
    sc_in< sc_uint<C_M_AXI_MEMORY_INOUT_BUSER_WIDTH> > m_axi_memory_inout_BUSER;
    sc_out< sc_logic > interrupt;


    // Module declarations
    foo(sc_module_name name);
    SC_HAS_PROCESS(foo);

    ~foo();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    foo_block_in_int* block_in_int_U;
    foo_block_in_int* x_in_in_int_U;
    foo_BUS_A_s_axi<C_S_AXI_BUS_A_ADDR_WIDTH,C_S_AXI_BUS_A_DATA_WIDTH>* foo_BUS_A_s_axi_U;
    foo_memory_inout_m_axi<32,32,5,C_M_AXI_MEMORY_INOUT_ID_WIDTH,C_M_AXI_MEMORY_INOUT_ADDR_WIDTH,C_M_AXI_MEMORY_INOUT_DATA_WIDTH,C_M_AXI_MEMORY_INOUT_AWUSER_WIDTH,C_M_AXI_MEMORY_INOUT_ARUSER_WIDTH,C_M_AXI_MEMORY_INOUT_WUSER_WIDTH,C_M_AXI_MEMORY_INOUT_RUSER_WIDTH,C_M_AXI_MEMORY_INOUT_BUSER_WIDTH,C_M_AXI_MEMORY_INOUT_TARGET_ADDR,C_M_AXI_MEMORY_INOUT_USER_VALUE,C_M_AXI_MEMORY_INOUT_PROT_VALUE,C_M_AXI_MEMORY_INOUT_CACHE_VALUE>* foo_memory_inout_m_axi_U;
    foo_y_out_out_int* y_out_out_int_U;
    foo_foo_user* grp_foo_foo_user_fu_203;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_64;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > byte_block_in_offset;
    sc_signal< sc_lv<32> > byte_block_in_offset_0_data_reg;
    sc_signal< sc_logic > byte_block_in_offset_0_vld_reg;
    sc_signal< sc_logic > byte_block_in_offset_0_ack_out;
    sc_signal< sc_lv<32> > byte_x_in_in_offset;
    sc_signal< sc_lv<32> > byte_x_in_in_offset_0_data_reg;
    sc_signal< sc_logic > byte_x_in_in_offset_0_vld_reg;
    sc_signal< sc_logic > byte_x_in_in_offset_0_ack_out;
    sc_signal< sc_lv<32> > byte_y_out_out_offset;
    sc_signal< sc_lv<32> > byte_y_out_out_offset_0_data_reg;
    sc_signal< sc_logic > byte_y_out_out_offset_0_vld_reg;
    sc_signal< sc_logic > byte_y_out_out_offset_0_ack_out;
    sc_signal< sc_lv<3> > block_in_int_address0;
    sc_signal< sc_logic > block_in_int_ce0;
    sc_signal< sc_logic > block_in_int_we0;
    sc_signal< sc_lv<32> > block_in_int_d0;
    sc_signal< sc_lv<32> > block_in_int_q0;
    sc_signal< sc_lv<3> > x_in_in_int_address0;
    sc_signal< sc_logic > x_in_in_int_ce0;
    sc_signal< sc_logic > x_in_in_int_we0;
    sc_signal< sc_lv<32> > x_in_in_int_d0;
    sc_signal< sc_lv<32> > x_in_in_int_q0;
    sc_signal< sc_logic > foo_BUS_A_s_axi_U_ap_dummy_ce;
    sc_signal< sc_logic > memory_inout_AWVALID;
    sc_signal< sc_logic > memory_inout_AWREADY;
    sc_signal< sc_lv<32> > memory_inout_AWADDR;
    sc_signal< sc_lv<1> > memory_inout_AWID;
    sc_signal< sc_lv<32> > memory_inout_AWLEN;
    sc_signal< sc_lv<3> > memory_inout_AWSIZE;
    sc_signal< sc_lv<2> > memory_inout_AWBURST;
    sc_signal< sc_lv<2> > memory_inout_AWLOCK;
    sc_signal< sc_lv<4> > memory_inout_AWCACHE;
    sc_signal< sc_lv<3> > memory_inout_AWPROT;
    sc_signal< sc_lv<4> > memory_inout_AWQOS;
    sc_signal< sc_lv<4> > memory_inout_AWREGION;
    sc_signal< sc_lv<1> > memory_inout_AWUSER;
    sc_signal< sc_logic > memory_inout_WVALID;
    sc_signal< sc_logic > memory_inout_WREADY;
    sc_signal< sc_lv<32> > memory_inout_WDATA;
    sc_signal< sc_lv<4> > memory_inout_WSTRB;
    sc_signal< sc_logic > memory_inout_WLAST;
    sc_signal< sc_lv<1> > memory_inout_WID;
    sc_signal< sc_lv<1> > memory_inout_WUSER;
    sc_signal< sc_logic > memory_inout_ARVALID;
    sc_signal< sc_logic > memory_inout_ARREADY;
    sc_signal< sc_lv<32> > memory_inout_ARADDR;
    sc_signal< sc_lv<1> > memory_inout_ARID;
    sc_signal< sc_lv<32> > memory_inout_ARLEN;
    sc_signal< sc_lv<3> > memory_inout_ARSIZE;
    sc_signal< sc_lv<2> > memory_inout_ARBURST;
    sc_signal< sc_lv<2> > memory_inout_ARLOCK;
    sc_signal< sc_lv<4> > memory_inout_ARCACHE;
    sc_signal< sc_lv<3> > memory_inout_ARPROT;
    sc_signal< sc_lv<4> > memory_inout_ARQOS;
    sc_signal< sc_lv<4> > memory_inout_ARREGION;
    sc_signal< sc_lv<1> > memory_inout_ARUSER;
    sc_signal< sc_logic > memory_inout_RVALID;
    sc_signal< sc_logic > memory_inout_RREADY;
    sc_signal< sc_lv<32> > memory_inout_RDATA;
    sc_signal< sc_logic > memory_inout_RLAST;
    sc_signal< sc_lv<1> > memory_inout_RID;
    sc_signal< sc_lv<1> > memory_inout_RUSER;
    sc_signal< sc_lv<2> > memory_inout_RRESP;
    sc_signal< sc_logic > memory_inout_BVALID;
    sc_signal< sc_logic > memory_inout_BREADY;
    sc_signal< sc_lv<2> > memory_inout_BRESP;
    sc_signal< sc_lv<1> > memory_inout_BID;
    sc_signal< sc_lv<1> > memory_inout_BUSER;
    sc_signal< sc_logic > foo_memory_inout_m_axi_U_ap_dummy_ce;
    sc_signal< sc_lv<3> > indvar_reg_168;
    sc_signal< sc_lv<3> > ap_reg_ppstg_indvar_reg_168_pp0_it1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_8;
    sc_signal< bool > ap_sig_bdd_313;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > exitcond_reg_377;
    sc_signal< bool > ap_sig_bdd_322;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<3> > indvar8_reg_180;
    sc_signal< sc_lv<3> > ap_reg_ppstg_indvar8_reg_180_pp1_it1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_15;
    sc_signal< bool > ap_sig_bdd_338;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_lv<1> > exitcond1_reg_395;
    sc_signal< bool > ap_sig_bdd_345;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it2;
    sc_signal< sc_lv<3> > indvar1_reg_192;
    sc_signal< sc_lv<32> > reg_212;
    sc_signal< sc_lv<32> > byte_y_out_out_offset_read_reg_351;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_367;
    sc_signal< sc_lv<32> > byte_x_in_in_offset_read_reg_357;
    sc_signal< sc_lv<30> > tmp_1_cast_reg_366;
    sc_signal< sc_lv<1> > tmp_fu_218_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_383;
    sc_signal< sc_logic > ap_sig_ioackin_memory_inout_ARREADY;
    sc_signal< sc_lv<1> > exitcond_fu_246_p2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_377_pp0_it1;
    sc_signal< sc_lv<3> > indvar_next_fu_252_p2;
    sc_signal< sc_lv<3> > indvar_next_reg_381;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_9;
    sc_signal< bool > ap_sig_bdd_403;
    sc_signal< sc_lv<1> > tmp_2_fu_263_p3;
    sc_signal< sc_lv<1> > exitcond1_fu_290_p2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond1_reg_395_pp1_it1;
    sc_signal< sc_lv<3> > indvar_next9_fu_296_p2;
    sc_signal< sc_lv<3> > indvar_next9_reg_399;
    sc_signal< sc_lv<1> > tmp_5_fu_307_p3;
    sc_signal< sc_lv<1> > tmp_5_reg_404;
    sc_signal< sc_logic > ap_sig_cseq_ST_st22_fsm_17;
    sc_signal< bool > ap_sig_bdd_425;
    sc_signal< sc_logic > ap_sig_ioackin_memory_inout_AWREADY;
    sc_signal< sc_logic > grp_foo_foo_user_fu_203_ap_done;
    sc_signal< sc_lv<1> > exitcond2_fu_334_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_413;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp2_stg0_fsm_18;
    sc_signal< bool > ap_sig_bdd_446;
    sc_signal< sc_logic > ap_reg_ppiten_pp2_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp2_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond2_reg_413_pp2_it1;
    sc_signal< sc_logic > ap_sig_ioackin_memory_inout_WREADY;
    sc_signal< sc_logic > ap_reg_ppiten_pp2_it2;
    sc_signal< sc_lv<3> > indvar_next1_fu_340_p2;
    sc_signal< sc_lv<32> > y_out_out_int_q0;
    sc_signal< sc_lv<32> > y_out_out_int_load_reg_427;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_480;
    sc_signal< sc_logic > ap_sig_cseq_ST_st17_fsm_14;
    sc_signal< bool > ap_sig_bdd_492;
    sc_signal< sc_lv<3> > y_out_out_int_address0;
    sc_signal< sc_logic > y_out_out_int_ce0;
    sc_signal< sc_logic > y_out_out_int_we0;
    sc_signal< sc_lv<32> > y_out_out_int_d0;
    sc_signal< sc_logic > grp_foo_foo_user_fu_203_ap_start;
    sc_signal< sc_logic > grp_foo_foo_user_fu_203_ap_idle;
    sc_signal< sc_logic > grp_foo_foo_user_fu_203_ap_ready;
    sc_signal< sc_lv<3> > grp_foo_foo_user_fu_203_block_in_int_address0;
    sc_signal< sc_logic > grp_foo_foo_user_fu_203_block_in_int_ce0;
    sc_signal< sc_lv<32> > grp_foo_foo_user_fu_203_block_in_int_q0;
    sc_signal< sc_lv<3> > grp_foo_foo_user_fu_203_x_in_in_int_address0;
    sc_signal< sc_logic > grp_foo_foo_user_fu_203_x_in_in_int_ce0;
    sc_signal< sc_lv<32> > grp_foo_foo_user_fu_203_x_in_in_int_q0;
    sc_signal< sc_lv<3> > grp_foo_foo_user_fu_203_y_out_out_int_address0;
    sc_signal< sc_logic > grp_foo_foo_user_fu_203_y_out_out_int_ce0;
    sc_signal< sc_logic > grp_foo_foo_user_fu_203_y_out_out_int_we0;
    sc_signal< sc_lv<32> > grp_foo_foo_user_fu_203_y_out_out_int_d0;
    sc_signal< sc_lv<3> > indvar_phi_fu_172_p4;
    sc_signal< sc_lv<3> > indvar8_phi_fu_184_p4;
    sc_signal< sc_logic > grp_foo_foo_user_fu_203_ap_start_ap_start_reg;
    sc_signal< sc_logic > ap_sig_cseq_ST_st21_fsm_16;
    sc_signal< bool > ap_sig_bdd_546;
    sc_signal< sc_lv<64> > tmp_3_fu_258_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_302_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_346_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_236_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_279_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_323_p1;
    sc_signal< sc_logic > ap_reg_ioackin_memory_inout_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_memory_inout_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_memory_inout_WREADY;
    sc_signal< sc_logic > ap_sig_cseq_ST_st29_fsm_22;
    sc_signal< bool > ap_sig_bdd_601;
    sc_signal< bool > ap_sig_bdd_606;
    sc_signal< sc_lv<30> > tmp_5_cast_fu_270_p4;
    sc_signal< sc_lv<30> > tmp_9_cast_fu_314_p4;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_775;
    sc_signal< bool > ap_sig_bdd_563;
    sc_signal< bool > ap_sig_bdd_589;
    sc_signal< bool > ap_sig_bdd_561;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_st1_fsm_0;
    static const sc_lv<23> ap_ST_st2_fsm_1;
    static const sc_lv<23> ap_ST_st3_fsm_2;
    static const sc_lv<23> ap_ST_st4_fsm_3;
    static const sc_lv<23> ap_ST_st5_fsm_4;
    static const sc_lv<23> ap_ST_st6_fsm_5;
    static const sc_lv<23> ap_ST_st7_fsm_6;
    static const sc_lv<23> ap_ST_st8_fsm_7;
    static const sc_lv<23> ap_ST_pp0_stg0_fsm_8;
    static const sc_lv<23> ap_ST_st12_fsm_9;
    static const sc_lv<23> ap_ST_st13_fsm_10;
    static const sc_lv<23> ap_ST_st14_fsm_11;
    static const sc_lv<23> ap_ST_st15_fsm_12;
    static const sc_lv<23> ap_ST_st16_fsm_13;
    static const sc_lv<23> ap_ST_st17_fsm_14;
    static const sc_lv<23> ap_ST_pp1_stg0_fsm_15;
    static const sc_lv<23> ap_ST_st21_fsm_16;
    static const sc_lv<23> ap_ST_st22_fsm_17;
    static const sc_lv<23> ap_ST_pp2_stg0_fsm_18;
    static const sc_lv<23> ap_ST_st26_fsm_19;
    static const sc_lv<23> ap_ST_st27_fsm_20;
    static const sc_lv<23> ap_ST_st28_fsm_21;
    static const sc_lv<23> ap_ST_st29_fsm_22;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_MEMORY_INOUT_TARGET_ADDR;
    static const int C_M_AXI_MEMORY_INOUT_USER_VALUE;
    static const int C_M_AXI_MEMORY_INOUT_PROT_VALUE;
    static const int C_M_AXI_MEMORY_INOUT_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_313();
    void thread_ap_sig_bdd_322();
    void thread_ap_sig_bdd_338();
    void thread_ap_sig_bdd_345();
    void thread_ap_sig_bdd_367();
    void thread_ap_sig_bdd_383();
    void thread_ap_sig_bdd_403();
    void thread_ap_sig_bdd_425();
    void thread_ap_sig_bdd_446();
    void thread_ap_sig_bdd_480();
    void thread_ap_sig_bdd_492();
    void thread_ap_sig_bdd_546();
    void thread_ap_sig_bdd_561();
    void thread_ap_sig_bdd_563();
    void thread_ap_sig_bdd_589();
    void thread_ap_sig_bdd_601();
    void thread_ap_sig_bdd_606();
    void thread_ap_sig_bdd_64();
    void thread_ap_sig_bdd_775();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_8();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_15();
    void thread_ap_sig_cseq_ST_pp2_stg0_fsm_18();
    void thread_ap_sig_cseq_ST_st12_fsm_9();
    void thread_ap_sig_cseq_ST_st17_fsm_14();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st21_fsm_16();
    void thread_ap_sig_cseq_ST_st22_fsm_17();
    void thread_ap_sig_cseq_ST_st29_fsm_22();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_ioackin_memory_inout_ARREADY();
    void thread_ap_sig_ioackin_memory_inout_AWREADY();
    void thread_ap_sig_ioackin_memory_inout_WREADY();
    void thread_block_in_int_address0();
    void thread_block_in_int_ce0();
    void thread_block_in_int_d0();
    void thread_block_in_int_we0();
    void thread_byte_block_in_offset_0_ack_out();
    void thread_byte_x_in_in_offset_0_ack_out();
    void thread_byte_y_out_out_offset_0_ack_out();
    void thread_exitcond1_fu_290_p2();
    void thread_exitcond2_fu_334_p2();
    void thread_exitcond_fu_246_p2();
    void thread_foo_BUS_A_s_axi_U_ap_dummy_ce();
    void thread_foo_memory_inout_m_axi_U_ap_dummy_ce();
    void thread_grp_foo_foo_user_fu_203_ap_start();
    void thread_grp_foo_foo_user_fu_203_block_in_int_q0();
    void thread_grp_foo_foo_user_fu_203_x_in_in_int_q0();
    void thread_indvar8_phi_fu_184_p4();
    void thread_indvar_next1_fu_340_p2();
    void thread_indvar_next9_fu_296_p2();
    void thread_indvar_next_fu_252_p2();
    void thread_indvar_phi_fu_172_p4();
    void thread_memory_inout_ARADDR();
    void thread_memory_inout_ARBURST();
    void thread_memory_inout_ARCACHE();
    void thread_memory_inout_ARID();
    void thread_memory_inout_ARLEN();
    void thread_memory_inout_ARLOCK();
    void thread_memory_inout_ARPROT();
    void thread_memory_inout_ARQOS();
    void thread_memory_inout_ARREGION();
    void thread_memory_inout_ARSIZE();
    void thread_memory_inout_ARUSER();
    void thread_memory_inout_ARVALID();
    void thread_memory_inout_AWADDR();
    void thread_memory_inout_AWBURST();
    void thread_memory_inout_AWCACHE();
    void thread_memory_inout_AWID();
    void thread_memory_inout_AWLEN();
    void thread_memory_inout_AWLOCK();
    void thread_memory_inout_AWPROT();
    void thread_memory_inout_AWQOS();
    void thread_memory_inout_AWREGION();
    void thread_memory_inout_AWSIZE();
    void thread_memory_inout_AWUSER();
    void thread_memory_inout_AWVALID();
    void thread_memory_inout_BREADY();
    void thread_memory_inout_RREADY();
    void thread_memory_inout_WDATA();
    void thread_memory_inout_WID();
    void thread_memory_inout_WLAST();
    void thread_memory_inout_WSTRB();
    void thread_memory_inout_WUSER();
    void thread_memory_inout_WVALID();
    void thread_tmp_1_fu_236_p1();
    void thread_tmp_2_fu_263_p3();
    void thread_tmp_3_fu_258_p1();
    void thread_tmp_4_fu_279_p1();
    void thread_tmp_5_cast_fu_270_p4();
    void thread_tmp_5_fu_307_p3();
    void thread_tmp_6_fu_323_p1();
    void thread_tmp_7_fu_302_p1();
    void thread_tmp_9_cast_fu_314_p4();
    void thread_tmp_fu_218_p3();
    void thread_tmp_s_fu_346_p1();
    void thread_x_in_in_int_address0();
    void thread_x_in_in_int_ce0();
    void thread_x_in_in_int_d0();
    void thread_x_in_in_int_we0();
    void thread_y_out_out_int_address0();
    void thread_y_out_out_int_ce0();
    void thread_y_out_out_int_d0();
    void thread_y_out_out_int_we0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
