// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _foo_foo_user_HH_
#define _foo_foo_user_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "foo_fadd_32ns_32ns_32_5_full_dsp.h"

namespace ap_rtl {

struct foo_foo_user : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > block_in_int_address0;
    sc_out< sc_logic > block_in_int_ce0;
    sc_in< sc_lv<32> > block_in_int_q0;
    sc_out< sc_lv<3> > x_in_in_int_address0;
    sc_out< sc_logic > x_in_in_int_ce0;
    sc_in< sc_lv<32> > x_in_in_int_q0;
    sc_out< sc_lv<3> > y_out_out_int_address0;
    sc_out< sc_logic > y_out_out_int_ce0;
    sc_out< sc_logic > y_out_out_int_we0;
    sc_out< sc_lv<32> > y_out_out_int_d0;


    // Module declarations
    foo_foo_user(sc_module_name name);
    SC_HAS_PROCESS(foo_foo_user);

    ~foo_foo_user();

    sc_trace_file* mVcdFile;

    foo_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* foo_fadd_32ns_32ns_32_5_full_dsp_U1;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_35;
    sc_signal< sc_lv<3> > i_1_fu_136_p2;
    sc_signal< sc_lv<3> > i_1_reg_184;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_66;
    sc_signal< sc_lv<3> > y_out_out_int_addr_reg_189;
    sc_signal< sc_lv<1> > exitcond2_fu_130_p2;
    sc_signal< sc_lv<3> > i_block_1_fu_153_p2;
    sc_signal< sc_lv<3> > i_block_1_reg_197;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_81;
    sc_signal< sc_lv<1> > exitcond1_fu_147_p2;
    sc_signal< sc_lv<32> > block_in_int_load_reg_207;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_94;
    sc_signal< sc_lv<32> > grp_fu_124_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_bdd_103;
    sc_signal< sc_lv<3> > i_x_in_1_fu_170_p2;
    sc_signal< sc_lv<3> > i_x_in_1_reg_220;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_bdd_112;
    sc_signal< sc_lv<1> > exitcond_fu_164_p2;
    sc_signal< sc_lv<32> > x_in_in_int_load_reg_230;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_125;
    sc_signal< sc_lv<32> > tmp_6_reg_235;
    sc_signal< sc_logic > ap_sig_cseq_ST_st16_fsm_15;
    sc_signal< bool > ap_sig_bdd_133;
    sc_signal< sc_lv<3> > i_reg_67;
    sc_signal< sc_lv<32> > storemerge_reg_78;
    sc_signal< sc_lv<3> > i_block_reg_91;
    sc_signal< sc_lv<32> > tmp_4_reg_102;
    sc_signal< sc_logic > ap_sig_cseq_ST_st17_fsm_16;
    sc_signal< bool > ap_sig_bdd_154;
    sc_signal< sc_lv<3> > i_x_in_reg_113;
    sc_signal< sc_lv<64> > tmp_fu_142_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_159_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_176_p1;
    sc_signal< sc_lv<32> > grp_fu_124_p0;
    sc_signal< sc_lv<32> > grp_fu_124_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_171;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_bdd_178;
    sc_signal< sc_logic > grp_fu_124_ce;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_st1_fsm_0;
    static const sc_lv<17> ap_ST_st2_fsm_1;
    static const sc_lv<17> ap_ST_st3_fsm_2;
    static const sc_lv<17> ap_ST_st4_fsm_3;
    static const sc_lv<17> ap_ST_st5_fsm_4;
    static const sc_lv<17> ap_ST_st6_fsm_5;
    static const sc_lv<17> ap_ST_st7_fsm_6;
    static const sc_lv<17> ap_ST_st8_fsm_7;
    static const sc_lv<17> ap_ST_st9_fsm_8;
    static const sc_lv<17> ap_ST_st10_fsm_9;
    static const sc_lv<17> ap_ST_st11_fsm_10;
    static const sc_lv<17> ap_ST_st12_fsm_11;
    static const sc_lv<17> ap_ST_st13_fsm_12;
    static const sc_lv<17> ap_ST_st14_fsm_13;
    static const sc_lv<17> ap_ST_st15_fsm_14;
    static const sc_lv<17> ap_ST_st16_fsm_15;
    static const sc_lv<17> ap_ST_st17_fsm_16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_103();
    void thread_ap_sig_bdd_112();
    void thread_ap_sig_bdd_125();
    void thread_ap_sig_bdd_133();
    void thread_ap_sig_bdd_154();
    void thread_ap_sig_bdd_171();
    void thread_ap_sig_bdd_178();
    void thread_ap_sig_bdd_35();
    void thread_ap_sig_bdd_66();
    void thread_ap_sig_bdd_81();
    void thread_ap_sig_bdd_94();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st16_fsm_15();
    void thread_ap_sig_cseq_ST_st17_fsm_16();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_block_in_int_address0();
    void thread_block_in_int_ce0();
    void thread_exitcond1_fu_147_p2();
    void thread_exitcond2_fu_130_p2();
    void thread_exitcond_fu_164_p2();
    void thread_grp_fu_124_ce();
    void thread_grp_fu_124_p0();
    void thread_grp_fu_124_p1();
    void thread_i_1_fu_136_p2();
    void thread_i_block_1_fu_153_p2();
    void thread_i_x_in_1_fu_170_p2();
    void thread_tmp_2_fu_159_p1();
    void thread_tmp_5_fu_176_p1();
    void thread_tmp_fu_142_p1();
    void thread_x_in_in_int_address0();
    void thread_x_in_in_int_ce0();
    void thread_y_out_out_int_address0();
    void thread_y_out_out_int_ce0();
    void thread_y_out_out_int_d0();
    void thread_y_out_out_int_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
