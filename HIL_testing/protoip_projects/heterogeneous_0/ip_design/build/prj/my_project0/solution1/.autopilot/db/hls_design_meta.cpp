#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("s_axi_BUS_A_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_BUS_A_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_memory_inout_AWVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_memory_inout_AWREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_memory_inout_AWADDR", 32, hls_out, 3, "m_axi", "ADDR", 1),
	Port_Property("m_axi_memory_inout_AWID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_memory_inout_AWLEN", 8, hls_out, 3, "m_axi", "LEN", 1),
	Port_Property("m_axi_memory_inout_AWSIZE", 3, hls_out, 3, "m_axi", "SIZE", 1),
	Port_Property("m_axi_memory_inout_AWBURST", 2, hls_out, 3, "m_axi", "BURST", 1),
	Port_Property("m_axi_memory_inout_AWLOCK", 2, hls_out, 3, "m_axi", "LOCK", 1),
	Port_Property("m_axi_memory_inout_AWCACHE", 4, hls_out, 3, "m_axi", "CACHE", 1),
	Port_Property("m_axi_memory_inout_AWPROT", 3, hls_out, 3, "m_axi", "PROT", 1),
	Port_Property("m_axi_memory_inout_AWQOS", 4, hls_out, 3, "m_axi", "QOS", 1),
	Port_Property("m_axi_memory_inout_AWREGION", 4, hls_out, 3, "m_axi", "REGION", 1),
	Port_Property("m_axi_memory_inout_AWUSER", 1, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_memory_inout_WVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_memory_inout_WREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_memory_inout_WDATA", 32, hls_out, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_memory_inout_WSTRB", 4, hls_out, 3, "m_axi", "STRB", 1),
	Port_Property("m_axi_memory_inout_WLAST", 1, hls_out, 3, "m_axi", "LAST", 1),
	Port_Property("m_axi_memory_inout_WID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_memory_inout_WUSER", 1, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_memory_inout_ARVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_memory_inout_ARREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_memory_inout_ARADDR", 32, hls_out, 3, "m_axi", "ADDR", 1),
	Port_Property("m_axi_memory_inout_ARID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_memory_inout_ARLEN", 8, hls_out, 3, "m_axi", "LEN", 1),
	Port_Property("m_axi_memory_inout_ARSIZE", 3, hls_out, 3, "m_axi", "SIZE", 1),
	Port_Property("m_axi_memory_inout_ARBURST", 2, hls_out, 3, "m_axi", "BURST", 1),
	Port_Property("m_axi_memory_inout_ARLOCK", 2, hls_out, 3, "m_axi", "LOCK", 1),
	Port_Property("m_axi_memory_inout_ARCACHE", 4, hls_out, 3, "m_axi", "CACHE", 1),
	Port_Property("m_axi_memory_inout_ARPROT", 3, hls_out, 3, "m_axi", "PROT", 1),
	Port_Property("m_axi_memory_inout_ARQOS", 4, hls_out, 3, "m_axi", "QOS", 1),
	Port_Property("m_axi_memory_inout_ARREGION", 4, hls_out, 3, "m_axi", "REGION", 1),
	Port_Property("m_axi_memory_inout_ARUSER", 1, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_memory_inout_RVALID", 1, hls_in, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_memory_inout_RREADY", 1, hls_out, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_memory_inout_RDATA", 32, hls_in, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_memory_inout_RLAST", 1, hls_in, 3, "m_axi", "LAST", 1),
	Port_Property("m_axi_memory_inout_RID", 1, hls_in, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_memory_inout_RUSER", 1, hls_in, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_memory_inout_RRESP", 2, hls_in, 3, "m_axi", "RESP", 1),
	Port_Property("m_axi_memory_inout_BVALID", 1, hls_in, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_memory_inout_BREADY", 1, hls_out, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_memory_inout_BRESP", 2, hls_in, 3, "m_axi", "RESP", 1),
	Port_Property("m_axi_memory_inout_BID", 1, hls_in, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_memory_inout_BUSER", 1, hls_in, 3, "m_axi", "USER", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "foo";
